README.md:3:Reed-Solomon library copied from: https://github.com/tierney/reed-solomon.
Makefile:1:# v Settings to be changed per-project v
Makefile:6:CFLAGS = -pedantic-errors -Wall -Wextra -std=c99 -fPIC -Werror
Makefile:19:# libraries (without -l)
Makefile:24:# gcov-like coverage command (expect gcov output, not gcov files)
Makefile:25:# Examples: llvm-cov-7 gcov -n (clang), gcov -rnm (gcc)
Makefile:27:COVERAGE_COMMAND := llvm-cov-7 gcov -n
Makefile:34:# ^ Settings to be changed per-project ^
Makefile:45:# targets and pre-requisites
Makefile:56:# libraries (without -l)
Makefile:71:LIBS_LOCATION := $(addprefix -L,$(LIBS_LOCATION))
Makefile:72:MAIN_LIBS_LOCATION := $(addprefix -L,$(MAIN_LIBS_LOCATION))
Makefile:73:TEST_LIBS_LOCATION := $(addprefix -L,$(TEST_LIBS_LOCATION))
Makefile:77:INCLUDE := -I$(INCLUDE_DIR)
Makefile:79:LIBS := $(LIBS_LOCATION) $(addprefix -l,$(LIBS))
Makefile:80:MAIN_LIBS := $(MAIN_LIBS_LOCATION) $(addprefix -l,$(MAIN_LIBS))
Makefile:81:TEST_LIBS := $(TEST_LIBS_LOCATION) $(addprefix -l,$(TEST_LIBS))
Makefile:88:GCOV_COMMAND:=$(COVERAGE_COMMAND) $(TESTS_OBJ) $(OBJECTS) 2>/dev/null | grep -Eo "('.*'|[[:digit:]]{1,3}.[[:digit:]]{2}%)" | paste -d " " - - | sort -k2 -nr
Makefile:89:UNTESTED_DETECTOR_COMMAND:=$(GCOV_COMMAND) | grep -v "100.00%" | grep -v "^'tests/" | awk '{ print "\x1b[38;2;255;25;25;1m" $$1 " \x1b[0m\x1b[38;2;255;100;100;1m" $$2 "\x1b[0m" }'
Makefile:91:RUN_TESTS_COMMAND:=@valgrind -q --exit-on-first-error=yes --error-exitcode=1 --tool=memcheck\
Makefile:92:		--show-reachable=yes --leak-check=yes --track-origins=yes $(TEST_TARGET_FINAL) --gtest_color=1 | grep -Pv "^\x1b\[0;32m" | grep -v "^$$"
Makefile:93:STATIC_ANALYSIS_COMMAND:=@cppcheck --addon=cert --addon=threadsafety --addon=naming \
Makefile:94:	$(INCLUDE) --suppress=missingIncludeSystem --suppress=unusedFunction --suppress=knownConditionTrueFalse --quiet --enable=all $(SRC) $(TESTS_SRC)
Makefile:103:	# release - produce optimized lib
Makefile:104:	# compilemain - produce main
Makefile:105:	# main - produce main and run it
Makefile:106:	# debug - produce lib with debug info and run tests
Makefile:107:	# clean - clean produced binaries
Makefile:108:	# clangd - generate compile_flags.txt file for clangd
Makefile:110:	@echo "-I" > $(ROOT_DIR)/compile_flags.txt
Makefile:113:release: CFLAGS += -O2 -fPIC
Makefile:118:	@$(CC) $(CFLAGS) $(INCLUDE) $(MAIN) -o $(TARGET) $(LDFLAGS)
Makefile:125:debug: CFLAGS += -DDEBUG -g -O0 -fprofile-arcs -ftest-coverage
Makefile:126:debug: LDFLAGS = $(LIBS) $(TEST_LIBS) --coverage
Makefile:130:	@$(CC) $(CFLAGS) $(INCLUDE) -o $(TEST_TARGET_FINAL) $^ $(LDFLAGS)
Makefile:135:	@mkdir -p $(APP_DIR)
Makefile:136:	@mkdir -p $(OBJ_DIR)
Makefile:137:	@mkdir -p $(TEST_OBJ_DIR)
Makefile:141:	-@rm -rf $(BUILD_DIR)/*
Makefile:142:	-@rm -f $(TEST_TARGET_FINAL)
Makefile:143:	-@rm -f $(TARGET)
Makefile:146:	@mkdir -p $(@D)
Makefile:147:	@$(CC) $(CFLAGS) -shared -o $(TARGET_LIB_FINAL) $^ $(LDFLAGS)
Makefile:150:	@mkdir -p $(@D)
Makefile:151:	@$(CC) $(CFLAGS) $(INCLUDE) $(COVERAGE) -c $< -o $@
Makefile:155:	@mkdir -p $(@D)
Makefile:156:	@$(CC) $(CFLAGS) $(INCLUDE) -c $< -o $@
Binary file build/objects/graph/graph.o matches
Binary file build/objects/graph/graph.gcno matches
Binary file build/objects/metrics/metrics.gcno matches
Binary file build/objects/metrics/metrics.o matches
Binary file build/objects/rs_api/rs.o matches
Binary file build/objects/rs_api/reed_solomon.gcno matches
Binary file build/objects/rs_api/reed_solomon.o matches
Binary file build/objects/connection/connection.gcno matches
Binary file build/objects/connection/connection.o matches
Binary file build/objects/decoder/decoder.o matches
Binary file build/objects/utils/utils.o matches
Binary file build/objects/code_generator/code_generator.gcno matches
Binary file build/objects/code_generator/code_generator.o matches
Binary file build/objects/encoder/encoder.gcno matches
Binary file build/objects/encoder/encoder.o matches
Binary file build/tests/test/test.gcno matches
Binary file build/tests/test/test.o matches
Binary file build/app/libwatermark.so matches
src/graph/graph.c:20:	if( graph->data ) free( graph->data );
src/graph/graph.c:23:	graph->data_len = data_len;
src/graph/graph.c:26:	graph->data = malloc( graph->data_len );
src/graph/graph.c:35:	memcpy(graph->data, data, data_len);
src/graph/graph.c:46:	if( graph->data ) free(graph->data);
src/graph/graph.c:48:	if( graph->connections ) connection_free( graph->connections );
src/graph/graph.c:63:		graph_next->next = graph_prev ? graph_prev->next : graph_next->next;
src/graph/graph.c:64:		graph_next->prev = graph_prev;
src/graph/graph.c:69:		if( graph_prev->next ) graph_prev->next->prev = graph_next;
src/graph/graph.c:70:		graph_prev->next = graph_next;
src/graph/graph.c:80:	for(; graph; graph = graph->next)
src/graph/graph.c:82:		if( graph->data && graph->data_len == data_len && !memcmp(graph->data, data, data_len) )
src/graph/graph.c:91:	return connection_search(graph_from->connections, graph_to);
src/graph/graph.c:100:	connection_delete( graph_from->connections, graph_to );
src/graph/graph.c:105:	(to avoid turning graph->connections into a dangling pointer)
src/graph/graph.c:109:	if( graph_from->connections->node == graph_to ){
src/graph/graph.c:110:		CONNECTION* new_root = graph_from->connections->next;
src/graph/graph.c:111:		free( graph_from->connections );
src/graph/graph.c:112:		graph_from->connections = new_root;
src/graph/graph.c:122:	connection_insert( graph_from->connections, graph_to );
src/graph/graph.c:125:	connection_insert() will do nothing if graph->connections is NULL,
src/graph/graph.c:129:	if( !graph_from->connections ){
src/graph/graph.c:130:		graph_from->connections = connection_create();
src/graph/graph.c:131:		graph_from->connections->node = graph_to;
src/graph/graph.c:167:	//the graph_to_isolate->connection should be NULL at the end
src/graph/graph.c:168:	while( graph_to_isolate->connections ) //we keep on going until this is NULL (no connection left)
src/graph/graph.c:171:		graph_disconnect(graph_to_isolate, graph_to_isolate->connections->node);
src/graph/graph.c:183:	graph_insert( graph_to_delete->prev, graph_to_delete->next );//now no node points to graph_to_delete
src/graph/graph.c:186:	GRAPH* to_return = graph_to_delete->prev ? graph_to_delete->prev : graph_to_delete->next;
src/graph/graph.c:201:	for(tmp = graph->next; graph; graph = tmp) {
src/graph/graph.c:202:		tmp = graph->next;
src/graph/graph.c:230:	(print_func ? print_func : graph_default_print_func)( graph->data, graph->data_len );
src/graph/graph.c:236:	for(; graph; graph = graph->next){
src/graph/graph.c:240:		if( graph->connections ){
src/graph/graph.c:241:			printf("\x1b[33m\x1b[1m -> \x1b[0m");
src/graph/graph.c:243:			connection_print(graph->connections, print_func);
src/graph/graph.c:250:	return !graph || !graph->connections;
src/graph/graph.c:259:	for(; graph_root; graph_root = graph_root->next)
src/graph/graph.c:272:	for(; graph_root; graph_root = graph_root->next)
src/graph/graph.c:285:	for(; graph_root; graph_root = graph_root->next)
src/graph/graph.c:295:    for(; graph; graph = graph->next)i++;
src/graph/graph.c:302:    for(; graph; graph = graph->next) {
src/graph/graph.c:304:        n += connection_num(graph->connections);
src/graph/graph.c:323:        .data = graph->data,
src/graph/graph.c:324:        .data_len = graph->data_len,
src/graph/graph.c:329:    graph->data_len = sizeof(INFO_NODE);
src/graph/graph.c:330:    graph->data = malloc( graph->data_len );
src/graph/graph.c:331:    memcpy(graph->data, &info_node, sizeof(INFO_NODE));
src/graph/graph.c:336:    INFO_NODE info_node = *(INFO_NODE*)graph->data;
src/graph/graph.c:338:    graph->data_len = info_node.data_len;
src/graph/graph.c:339:    graph->data = info_node.data;
src/graph/graph.c:344:    return ((INFO_NODE*)graph->data)->info;
src/graph/graph.c:349:    return ((INFO_NODE*)graph->data)->info_len;
src/graph/graph.c:358:    for(GRAPH* cursor = graph; cursor; cursor = cursor->next) {
src/graph/graph.c:364:                    cursor->data,
src/graph/graph.c:365:                    cursor->data_len
src/graph/graph.c:370:        if( cursor->prev ) {
src/graph/graph.c:372:            graph_insert(_graph_get_info(cursor->prev), _graph_get_info(cursor));
src/graph/graph.c:376:    for(GRAPH* cursor = graph; cursor; cursor = cursor->next) {
src/graph/graph.c:378:        // look for copy counter-part
src/graph/graph.c:381:        for(CONNECTION* conn = cursor->connections; conn; conn = conn->next) {
src/graph/graph.c:382:            GRAPH* neighbour = _graph_get_info(conn->node);
src/graph/graph.c:397:    for(GRAPH* cursor=graph; cursor; cursor = cursor->next) _graph_unload_info(cursor);
src/graph/graph.c:412:        node = node->next;
src/graph/graph.c:421:    for(GRAPH* node = graph; node; node = node->next) {
src/graph/graph.c:432:            ((INFO_NODE*)node->data)->data_len + // data
src/graph/graph.c:441:            graph_serialized + ( (*num_bytes) - offset ),
src/graph/graph.c:442:            &((INFO_NODE*)node->data)->data_len,
src/graph/graph.c:448:            graph_serialized + ( (*num_bytes) - offset + sizeof(unsigned long) ),
src/graph/graph.c:449:            ((INFO_NODE*)node->data)->data,
src/graph/graph.c:450:            ((INFO_NODE*)node->data)->data_len
src/graph/graph.c:455:            graph_serialized + ( (*num_bytes) - sizeof(unsigned long) * (1+num_neighbours) ),
src/graph/graph.c:462:        for(CONNECTION* conn = node->connections; conn; conn = conn->next) {
src/graph/graph.c:464:                graph_serialized + ( (*num_bytes) - sizeof(unsigned long) * (num_neighbours-neighbour_pos) ),
src/graph/graph.c:465:                _graph_get_info(conn->node),
src/graph/graph.c:473:    for(GRAPH* node=graph; node; node = node->next) {
src/graph/graph.c:497:            graph_insert(nodes[i-1], nodes[0]);
src/graph/graph.c:520:            nodes[i]->data,
src/metrics/metrics.c:8:	for(; graph; graph = graph->next)
src/metrics/metrics.c:11:		for(CONNECTION* connection = graph->connections; connection; connection = connection->next)
src/metrics/metrics.c:21:	// of bits. n_bits = n_nodes - 1, because of the last null node, 
src/metrics/metrics.c:22:	// and since the number of edges is the number of nodes - 1, this
src/metrics/metrics.c:35:	for(; graph; graph = graph->next) {
src/metrics/metrics.c:46:	for(; graph; graph = graph->next) {
src/metrics/metrics.c:56:	// cyclomatic complexity = # edges - # nodes + 2 * # nodes with exit points
src/metrics/metrics.c:57:	// cyclomatic complexity = # edges - # nodes + 2
src/metrics/metrics.c:59:	return watermark_num_edges(graph) - watermark_num_nodes(graph) + 2;
src/rs_api/reed_solomon.c:69: * rs_init - Initialize a Reed-Solomon codec
src/rs_api/reed_solomon.c:70: * @symsize:	symbol size, bits (1-8)
src/rs_api/reed_solomon.c:91:	INIT_LIST_HEAD(&rs->list);
src/rs_api/reed_solomon.c:93:	rs->mm = symsize;
src/rs_api/reed_solomon.c:94:	rs->nn = (1 << symsize) - 1;
src/rs_api/reed_solomon.c:95:	rs->fcr = fcr;
src/rs_api/reed_solomon.c:96:	rs->prim = prim;
src/rs_api/reed_solomon.c:97:	rs->nroots = nroots;
src/rs_api/reed_solomon.c:98:	rs->gfpoly = gfpoly;
src/rs_api/reed_solomon.c:99:	rs->gffunc = gffunc;
src/rs_api/reed_solomon.c:102:	rs->alpha_to = malloc(sizeof(uint16_t) * (rs->nn + 1));
src/rs_api/reed_solomon.c:103:	if (rs->alpha_to == NULL)
src/rs_api/reed_solomon.c:106:	rs->index_of = malloc(sizeof(uint16_t) * (rs->nn + 1));
src/rs_api/reed_solomon.c:107:	if (rs->index_of == NULL)
src/rs_api/reed_solomon.c:110:	rs->genpoly = malloc(sizeof(uint16_t) * (rs->nroots + 1));
src/rs_api/reed_solomon.c:111:	if(rs->genpoly == NULL)
src/rs_api/reed_solomon.c:115:	rs->index_of[0] = rs->nn;	/* log(zero) = -inf */
src/rs_api/reed_solomon.c:116:	rs->alpha_to[rs->nn] = 0;	/* alpha**-inf = 0 */
src/rs_api/reed_solomon.c:119:		for (i = 0; i < rs->nn; i++) {
src/rs_api/reed_solomon.c:120:			rs->index_of[sr] = i;
src/rs_api/reed_solomon.c:121:			rs->alpha_to[i] = sr;
src/rs_api/reed_solomon.c:125:			sr &= rs->nn;
src/rs_api/reed_solomon.c:129:		for (i = 0; i < rs->nn; i++) {
src/rs_api/reed_solomon.c:130:			rs->index_of[sr] = i;
src/rs_api/reed_solomon.c:131:			rs->alpha_to[i] = sr;
src/rs_api/reed_solomon.c:136:	if(sr != rs->alpha_to[0])
src/rs_api/reed_solomon.c:139:	/* Find prim-th root of 1, used in decoding */
src/rs_api/reed_solomon.c:140:	for(iprim = 1; (iprim % prim) != 0; iprim += rs->nn);
src/rs_api/reed_solomon.c:141:	/* prim-th root of 1, index form */
src/rs_api/reed_solomon.c:142:	rs->iprim = iprim / prim;
src/rs_api/reed_solomon.c:145:	rs->genpoly[0] = 1;
src/rs_api/reed_solomon.c:147:		rs->genpoly[i + 1] = 1;
src/rs_api/reed_solomon.c:148:		/* Multiply rs->genpoly[] by  @**(root + x) */
src/rs_api/reed_solomon.c:149:		for (j = i; j > 0; j--) {
src/rs_api/reed_solomon.c:150:			if (rs->genpoly[j] != 0) {
src/rs_api/reed_solomon.c:151:				rs->genpoly[j] = rs->genpoly[j -1] ^
src/rs_api/reed_solomon.c:152:					rs->alpha_to[rs_modnn(rs,
src/rs_api/reed_solomon.c:153:					rs->index_of[rs->genpoly[j]] + root)];
src/rs_api/reed_solomon.c:155:				rs->genpoly[j] = rs->genpoly[j - 1];
src/rs_api/reed_solomon.c:157:		/* rs->genpoly[0] can never be zero */
src/rs_api/reed_solomon.c:158:		rs->genpoly[0] =
src/rs_api/reed_solomon.c:159:			rs->alpha_to[rs_modnn(rs,
src/rs_api/reed_solomon.c:160:				rs->index_of[rs->genpoly[0]] + root)];
src/rs_api/reed_solomon.c:162:	/* convert rs->genpoly[] to index form for quicker encoding */
src/rs_api/reed_solomon.c:164:		rs->genpoly[i] = rs->index_of[rs->genpoly[i]];
src/rs_api/reed_solomon.c:169:	free(rs->genpoly);
src/rs_api/reed_solomon.c:171:	free(rs->index_of);
src/rs_api/reed_solomon.c:173:	free(rs->alpha_to);
src/rs_api/reed_solomon.c:181: *  free_rs - Free the rs control structure, if it is no longer used
src/rs_api/reed_solomon.c:188:	rs->users--;
src/rs_api/reed_solomon.c:189:	if(!rs->users) {
src/rs_api/reed_solomon.c:190:		list_del(&rs->list);
src/rs_api/reed_solomon.c:191:		free(rs->alpha_to);
src/rs_api/reed_solomon.c:192:		free(rs->index_of);
src/rs_api/reed_solomon.c:193:		free(rs->genpoly);
src/rs_api/reed_solomon.c:200: * init_rs_internal - Find a matching or allocate a new rs control structure
src/rs_api/reed_solomon.c:239:		if (symsize != rs->mm)
src/rs_api/reed_solomon.c:241:		if (gfpoly != rs->gfpoly)
src/rs_api/reed_solomon.c:243:		if (gffunc != rs->gffunc)
src/rs_api/reed_solomon.c:245:		if (fcr != rs->fcr)
src/rs_api/reed_solomon.c:247:		if (prim != rs->prim)
src/rs_api/reed_solomon.c:249:		if (nroots != rs->nroots)
src/rs_api/reed_solomon.c:252:		rs->users++;
src/rs_api/reed_solomon.c:259:		rs->users = 1;
src/rs_api/reed_solomon.c:260:		list_add(&rs->list, &rslist);
src/rs_api/reed_solomon.c:268: * init_rs - Find a matching or allocate a new rs control structure
src/rs_api/reed_solomon.c:285: * init_rs_non_canonical - Find a matching or allocate a new rs control
src/rs_api/reed_solomon.c:286: *                         structure, for fields with non-canonical
src/rs_api/reed_solomon.c:305: *  encode_rs8 - Calculate the parity for data values (8bit data width)
src/rs_api/reed_solomon.c:325: *  decode_rs8 - Decode codeword (8bit data width)
src/rs_api/reed_solomon.c:339: *  Returns the number of corrected bits or -EBADMSG for uncorrectable errors.
src/rs_api/reed_solomon.c:351: *  encode_rs16 - Calculate the parity for data values (16bit data width)
src/rs_api/reed_solomon.c:369: *  decode_rs16 - Decode codeword (16bit data width)
src/rs_api/reed_solomon.c:381: *  Returns the number of corrected bits or -EBADMSG for uncorrectable errors.
src/rs_api/rs.c:25:// if errors can't be corrected, -1 is returned, otherwise number of errors is returned (can be 0)
src/rs_api/rs.c:34:	return numerr == -74 ? -1 : numerr;
src/connection/connection.c:12:	connection->weight = 1;
src/connection/connection.c:26:	new_connection_node->node = new_connection;
src/connection/connection.c:29:	//connection_root->next's antecessor
src/connection/connection.c:30:	new_connection_node->next = connection_root->next;
src/connection/connection.c:31:	connection_root->next = new_connection_node;
src/connection/connection.c:41:	connection_node = connection_node->next ){
src/connection/connection.c:44:		if( connection_node->node == graph_node ) return connection_node;
src/connection/connection.c:57:	connection_node->next;	//iterates through connections until current_connection
src/connection/connection.c:58:	connection_node = connection_node->next ){
src/connection/connection.c:60:		if( connection_node->next->node == graph_node ){
src/connection/connection.c:62:			CONNECTION* tmp = connection_node->next; //save found node
src/connection/connection.c:63:			connection_node->next = tmp->next; //points to found node sucessor
src/connection/connection.c:76:	while( connection_root->next ) connection_delete(connection_root, connection_root->next->node);
src/connection/connection.c:85:	for(; connection; connection = connection->next) graph_print_node(connection->node, print_func);
src/connection/connection.c:91:    for(; connection; connection = connection->next) n++;
src/decoder/decoder.c:29:	unsigned long stack_idx = get_parity_stack(&decoder->stacks, is_odd)->n;
src/decoder/decoder.c:32:	add_node_to_stacks(&decoder->stacks, node, h_idx, is_odd);
src/decoder/decoder.c:36:	memcpy(node->data, &wm_node_info, node->data_len);
src/decoder/decoder.c:42:	decoder->current_node = graph;
src/decoder/decoder.c:44:	create_stacks(&decoder->stacks, n_bits);
src/decoder/decoder.c:46:	decoder->n_bits = n_bits;
src/decoder/decoder.c:49:		decoder->graph = graph;
src/decoder/decoder.c:57:	WM_NODE* node_info = node->data;
src/decoder/decoder.c:58:	uint8_t is_odd = !(node_info->hamiltonian_idx & 1);
src/decoder/decoder.c:60:	PSTACK* stack = get_parity_stack(&decoder->stacks, is_odd);
src/decoder/decoder.c:62:	return !( node_info->stack_idx < stack->n && stack->stack[node_info->stack_idx] == node );
src/decoder/decoder.c:67:	uint8_t* bit_arr = malloc( sizeof(uint8_t) * decoder->n_bits );
src/decoder/decoder.c:70:	for(unsigned long i=0; i < decoder->n_bits; i++ ) {
src/decoder/decoder.c:72:		// check if there is a backedge ( connection with non-zero data_len is a valid backedge)
src/decoder/decoder.c:73:		GRAPH* dest_node = get_backedge(decoder->current_node);
src/decoder/decoder.c:76:			WM_NODE* dest = ((WM_NODE*)dest_node->data);
src/decoder/decoder.c:87:			pop_stacks(&decoder->stacks, dest->stack_idx, dest->hamiltonian_idx);
src/decoder/decoder.c:89:			bit_arr[i] = (i - dest->hamiltonian_idx) & 1;
src/decoder/decoder.c:93:		} else if( !decoder->current_node->prev ) {
src/decoder/decoder.c:108:			// 1 - current_node = i. If i is odd, the bit is 0, if i is even the bit is 1.
src/decoder/decoder.c:113:			if( get_parity_stack(&decoder->stacks, 0)->n ) {
src/decoder/decoder.c:119:		label_new_current_node(decoder, decoder->current_node, i);
src/decoder/decoder.c:120:		decoder->current_node = get_next_hamiltonian_node2014(decoder->current_node);
src/decoder/decoder.c:128:	return ((WM_NODE*)node->data)->hamiltonian_idx;
src/decoder/decoder.c:135:	*((unsigned long*)node->data) = idx;
src/decoder/decoder.c:139:	uint8_t* bit_arr = malloc( sizeof(uint8_t) * decoder->n_bits );
src/decoder/decoder.c:140:	memset(bit_arr, 0x00, sizeof(uint8_t) * decoder->n_bits);
src/decoder/decoder.c:143:	int forward_flag = -1;
src/decoder/decoder.c:149:	GRAPH* next = get_next_hamiltonian_node(decoder->current_node);	
src/decoder/decoder.c:150:	label_new_current_node(decoder, decoder->current_node, 0);
src/decoder/decoder.c:151:	//_add_idx(decoder->current_node, 0);
src/decoder/decoder.c:152:	decoder->current_node = next;
src/decoder/decoder.c:155:	for(unsigned long i=1; i < decoder->n_bits; i++ ) {
src/decoder/decoder.c:157:        if(!decoder->current_node) {
src/decoder/decoder.c:164:			if( get_forward_edge(decoder->current_node) ) {
src/decoder/decoder.c:167:			} else if( get_backedge(decoder->current_node) && !( (h_idx - get_node_idx(get_backedge(decoder->current_node))-1) & 1 ) ) {
src/decoder/decoder.c:169:				GRAPH* dest_node = get_backedge(decoder->current_node);
src/decoder/decoder.c:170:				WM_NODE* dest = dest_node->data;
src/decoder/decoder.c:181:				pop_stacks(&decoder->stacks, dest->stack_idx, dest->hamiltonian_idx);
src/decoder/decoder.c:184:				GRAPH* dest_node = get_backedge(decoder->current_node);
src/decoder/decoder.c:195:					WM_NODE* dest = dest_node->data;
src/decoder/decoder.c:196:					pop_stacks(&decoder->stacks, dest->stack_idx, dest->hamiltonian_idx);
src/decoder/decoder.c:200:			i--;
src/decoder/decoder.c:203:		if( forward_flag >= 0 ) forward_flag--;
src/decoder/decoder.c:205:		GRAPH* next = get_next_hamiltonian_node(decoder->current_node);	
src/decoder/decoder.c:206:		label_new_current_node(decoder, decoder->current_node, h_idx);
src/decoder/decoder.c:207:		//_add_idx(decoder->current_node, h_idx);
src/decoder/decoder.c:208:		decoder->current_node = next;
src/decoder/decoder.c:223:	uint8_t offset = n_bits % 8 ? 8 - (n_bits % 8) : 0;
src/decoder/decoder.c:232:	free_stacks(&decoder->stacks);
src/decoder/decoder.c:265:	*num_bytes -= num_rs_bytes * sizeof(uint16_t);
src/utils/utils.c:4:	return node->data_len;
src/utils/utils.c:9:	stack->n = idx+1;
src/utils/utils.c:14:	stack->n = size;
src/utils/utils.c:19:	GRAPH* node1 = node->connections->node;
src/utils/utils.c:20:	GRAPH* node2 = node->connections->next->node;
src/utils/utils.c:25:	if( ( node1->connections && is_backedge(node1->connections->node) ) || ( node2->connections && is_backedge(node2->connections->node) ) ) {
src/utils/utils.c:26:		return ( node1->connections && is_backedge(node1->connections->node) ) ? node2 : node1;
src/utils/utils.c:30:		return connection_search(node1->connections, node2) ? node2 : node1;
src/utils/utils.c:39:	if( !graph->connections || graph->connections->next ) return 0;
src/utils/utils.c:43:	for(; graph; graph = graph->next) {
src/utils/utils.c:46:		if( !graph->connections ) {
src/utils/utils.c:52:		if( graph->connections && graph->connections->next && graph->connections->next->next ) return 0;
src/utils/utils.c:55:		if( connection_search(graph->connections, graph) ) return 0;
src/utils/utils.c:64:	stacks->odd.stack = malloc(sizeof(GRAPH*) * (n_bits));
src/utils/utils.c:65:	stacks->even.stack = malloc(sizeof(GRAPH*) * (n_bits));
src/utils/utils.c:66:	stacks->history.stack = malloc(sizeof(unsigned long) * n_bits * 2);
src/utils/utils.c:68:	stacks->odd.n = 0;
src/utils/utils.c:69:	stacks->even.n = 0;
src/utils/utils.c:74:	free(stacks->odd.stack);
src/utils/utils.c:75:	free(stacks->even.stack);
src/utils/utils.c:76:	free(stacks->history.stack);
src/utils/utils.c:102:	for(GRAPH* node = graph; node; node = node->next) {
src/utils/utils.c:105:		free(node->data);
src/utils/utils.c:106:		node->data = NULL;
src/utils/utils.c:107:		node->data_len = 0;
src/utils/utils.c:110:	return i-1;
src/utils/utils.c:120:	for(GRAPH* node = graph; node; node = node->next) {
src/utils/utils.c:123:		node->data_len = UINT_MAX;
src/utils/utils.c:127:	for(GRAPH* node = graph; node; node = node->next) node->data_len = 0;
src/utils/utils.c:129:	return i-1; // ignore final node (don't represent any bits)
src/utils/utils.c:135:	for(CONNECTION* conn = node->connections; conn; conn = conn->next) {
src/utils/utils.c:137:		if( is_backedge(conn->node) ) return conn->node;
src/utils/utils.c:147:	if( !node->connections || !node->connections->next ) {
src/utils/utils.c:152:		CONNECTION* conn1 = node->connections;
src/utils/utils.c:153:		CONNECTION* conn2 = node->connections->next;
src/utils/utils.c:155:		if( is_backedge(conn1->node) || is_backedge(conn2->node) ) {
src/utils/utils.c:165:	if( !node || !node->connections ) return NULL;
src/utils/utils.c:168:	if( !node->connections->next ) {
src/utils/utils.c:169:		return is_backedge(node->connections->node) ? NULL : node->connections;
src/utils/utils.c:173:		CONNECTION* conn1 = node->connections;
src/utils/utils.c:174:		CONNECTION* conn2 = node->connections->next;
src/utils/utils.c:176:		if( is_backedge(conn1->node) || is_backedge(conn2->node) ) {
src/utils/utils.c:177:			return is_backedge(conn1->node) ? conn2 : conn1;
src/utils/utils.c:179:			return find_guaranteed_forward_edge(node)->connections == conn1 ? conn2 : conn1;
src/utils/utils.c:192:	return conn ? conn->node : get_forward_edge(node->connections->node);
src/utils/utils.c:199:	for(CONNECTION* conn = node->connections; conn; conn = conn->next) {
src/utils/utils.c:201:		if( !is_backedge(conn->node) ) return conn->node;
src/utils/utils.c:208:	return is_odd ? &stacks->odd : &stacks->even;
src/utils/utils.c:214:	stacks->history.stack[h_idx] = is_odd ? stacks->even.n : stacks->odd.n;
src/utils/utils.c:218:	stack->stack[stack->n++] = node;
src/utils/utils.c:230:	pop_all_history(not_dest_stack, stacks->history.stack[ backedge_h_idx ]);
src/utils/utils.c:244:	if( dest_stack->n && ( dest_stack->n - prev_has_backedge_in_this_stack ) ) {
src/utils/utils.c:245:		unsigned long dest_idx = rand() % (dest_stack->n - prev_has_backedge_in_this_stack);	
src/utils/utils.c:246:		GRAPH* dest_node = dest_stack->stack[ dest_idx ];	
src/utils/utils.c:248:		pop_stacks(stacks, dest_idx, (*(unsigned long*)dest_node->data) - 1);
src/code_generator/code_generator.c:27:	.last = (unsigned long)-1,\
src/code_generator/code_generator.c:38:		string->len = str_len ? str_len : strlen(str);
src/code_generator/code_generator.c:40:		string->str = malloc(string->len+1);
src/code_generator/code_generator.c:41:		for(unsigned long i=0; i < string->len; i++) string->str[i] = str[i];
src/code_generator/code_generator.c:42:		string->str[string->len]=0x00;
src/code_generator/code_generator.c:44:		string->str = NULL;
src/code_generator/code_generator.c:45:		string->len = 0;
src/code_generator/code_generator.c:55:	free(str->str);
src/code_generator/code_generator.c:63:	return string_create(str->str, str->len);
src/code_generator/code_generator.c:70:	free(str->str);
src/code_generator/code_generator.c:71:	str->len = to_clone->len;
src/code_generator/code_generator.c:72:	str->str = malloc(str->len+1);
src/code_generator/code_generator.c:73:	for(unsigned long i=0; i < str->len; i++) str->str[i] = to_clone->str[i];
src/code_generator/code_generator.c:74:	str->str[str->len]=0x00;
src/code_generator/code_generator.c:86:	unsigned long old_len = str->len;
src/code_generator/code_generator.c:88:	str->len += appendix->len;
src/code_generator/code_generator.c:89:	str->str = realloc(str->str, str->len+1);
src/code_generator/code_generator.c:92:	for(unsigned long i = old_len; i < str->len; i++) str->str[i] = appendix->str[ i - old_len ];
src/code_generator/code_generator.c:94:	str->str[str->len]=0x00;
src/code_generator/code_generator.c:103:	str->len = new_len;
src/code_generator/code_generator.c:104:	str->str = realloc(str->str, str->len+1);
src/code_generator/code_generator.c:105:	str->str[str->len] = 0x00;
src/code_generator/code_generator.c:113:	for(node = graph; node; node = node->next) {
src/code_generator/code_generator.c:114:		free(node->data);
src/code_generator/code_generator.c:115:		node->data = NULL;
src/code_generator/code_generator.c:116:		node->data_len = 0;
src/code_generator/code_generator.c:125:	for(GRAPH* node = graph; node->next; node = node->next) {
src/code_generator/code_generator.c:128:		node->data_len = UINT_MAX; // backedges will have data_len equal to a non-zero positive number
src/code_generator/code_generator.c:133:			if(!node->data) node->data_len = sizeof(STRING);
src/code_generator/code_generator.c:134:			if(!backedge_node->data) backedge_node->data_len = sizeof(STRING);
src/code_generator/code_generator.c:137:			STRING* tmp = node->data;
src/code_generator/code_generator.c:138:			node->data = string_append(string_create("}", 1), node->data);
src/code_generator/code_generator.c:142:			backedge_node->data = string_append(backedge_node->data, opening_bracket);
src/code_generator/code_generator.c:152:	for(GRAPH* node = graph; node->next; node = node->next) {
src/code_generator/code_generator.c:154:		if( node->data ) {
src/code_generator/code_generator.c:155:			final = string_append(final, node->data);
src/code_generator/code_generator.c:156:			string_free(node->data);
src/code_generator/code_generator.c:157:			node->data = NULL;
src/code_generator/code_generator.c:161:	char* final_string = final->str;
src/code_generator/code_generator.c:170:		idx = rand() % variables->next;
src/code_generator/code_generator.c:171:	} while( idx == variables->last );
src/code_generator/code_generator.c:173:	variables->last = idx;
src/code_generator/code_generator.c:175:	if( idx >= variables->len ) {
src/code_generator/code_generator.c:177:		unsigned long id = idx - variables->len;
src/code_generator/code_generator.c:183:		return string_create( (char*)variables->table[idx], 0 );
src/code_generator/code_generator.c:193:	if( variables->next > 1 && variables->new > variables->new_counter ) {
src/code_generator/code_generator.c:195:		variables->new_counter++;
src/code_generator/code_generator.c:200:		variables->new_counter=0;
src/code_generator/code_generator.c:201:		variables->new++;
src/code_generator/code_generator.c:203:		if( variables->next >= variables->len ) {
src/code_generator/code_generator.c:205:			unsigned long id = variables->next - variables->len;
src/code_generator/code_generator.c:211:			var = string_create( (char*) variables->table[ variables->next ], 0 );
src/code_generator/code_generator.c:213:		variables->last = variables->next++;
src/code_generator/code_generator.c:227:		var = string_create((char*)values->table[ rand() % values->len ], 0);
src/code_generator/code_generator.c:236:	STRING* init = string_create((char*)initializers->table[ rand() % initializers->len ], 0);
src/code_generator/code_generator.c:239:	STRING* var2 = string_create((char*)values->table[ rand() % values->len ], 0);
src/code_generator/code_generator.c:257:	if( i >= variables->len ) {
src/code_generator/code_generator.c:259:		unsigned long id = i - variables->len;
src/code_generator/code_generator.c:263:		var = (char*)variables->table[ i ];
src/code_generator/code_generator.c:271:	for(unsigned long i=0; i < variables->next; i++) {
src/code_generator/code_generator.c:293:	STRING* op = string_create( (char*)operations->table[ rand() % operations->len ], 0 );
src/code_generator/code_generator.c:328:	STRING* comp = string_create( (char*)comparisons->table[ rand() % comparisons->len ], 0 );
src/code_generator/code_generator.c:385:	STRING* t = generate_tabs(--tabs);
src/code_generator/code_generator.c:407:	GEN_TABLE operations = GEN_TABLE_CREATE("*", "/", "+", "-", "|", "&", "^");
src/code_generator/code_generator.c:412:	for(GRAPH* node=graph; node->next; node = node->next) {
src/code_generator/code_generator.c:414:		if( node->data ) {
src/code_generator/code_generator.c:417:			STRING* old_str = node->data;
src/code_generator/code_generator.c:419:			for(unsigned long i = 0; i < old_str->len; i++) {
src/code_generator/code_generator.c:421:				if( old_str->str[i] == '{' ) {
src/code_generator/code_generator.c:430:					tabs--;
src/code_generator/code_generator.c:433:			string_copy(node->data, new_str);
src/code_generator/code_generator.c:439:	STRING* tmp = graph->data;
src/code_generator/code_generator.c:440:	graph->data = string_append( generate_initializers(&variables, &initializers, &values), graph->data);
src/encoder/encoder.c:39:	graph_insert(encoder->final_node, new_node);
src/encoder/encoder.c:40:	graph_oriented_connect(encoder->final_node, new_node);
src/encoder/encoder.c:41:	encoder->final_node = new_node;
src/encoder/encoder.c:47:	create_stacks(&encoder->stacks, n_bits);
src/encoder/encoder.c:51:	encoder->final_node = encoder->graph = graph_create(&one, sizeof(unsigned long));
src/encoder/encoder.c:52:	add_node_to_stacks(&encoder->stacks, encoder->final_node, 0, 1);
src/encoder/encoder.c:63:	free_stacks(&encoder->stacks);
src/encoder/encoder.c:71:	*((unsigned long*)node->data) = idx;
src/encoder/encoder.c:77:	GRAPH* node = get_next_hamiltonian_node2014(encoder->graph);
src/encoder/encoder.c:80:		// 0-based index of the node's position in the hamiltonian path
src/encoder/encoder.c:81:		unsigned long idx = i-trailing_zeroes;
src/encoder/encoder.c:89:		add_backedge2014( &encoder->stacks, node, bit, is_odd );
src/encoder/encoder.c:92:		add_node_to_stacks( &encoder->stacks, node, idx, is_odd );
src/encoder/encoder.c:108:	PSTACK* node_stack = get_parity_stack(&encoder->stacks, bit ? !is_odd : is_odd);
src/encoder/encoder.c:110:	return node_stack->n - prev_has_backedge_at_same_parity_stack(h_idx, last_node, bit, last_bit);
src/encoder/encoder.c:125:	GRAPH* node = encoder->graph->next;
src/encoder/encoder.c:130:		// 0-based index of the node's position in the hamiltonian path
src/encoder/encoder.c:135:			i--;
src/encoder/encoder.c:136:			add_node_to_stacks(&encoder->stacks, node, h_idx, is_odd);
src/encoder/encoder.c:137:		} else if(num_possible_backedges(encoder, h_idx, node->prev, bit, get_bit(data, i-1))) {
src/encoder/encoder.c:143:					graph_oriented_connect(node, node->prev);
src/encoder/encoder.c:144:					graph_oriented_disconnect(node, node->next);
src/encoder/encoder.c:147:				add_backedge(&encoder->stacks, node, prev_has_backedge_at_same_parity_stack(h_idx, node->prev, bit, get_bit(data, i-1)), bit, is_odd);
src/encoder/encoder.c:153:				graph_oriented_connect(node, node->next->next);
src/encoder/encoder.c:156:			add_node_to_stacks(&encoder->stacks, node, h_idx, is_odd);
src/encoder/encoder.c:161:		node = node->next;
src/encoder/encoder.c:176:	unsigned long n_bits = data_len * 8 - trailing_zeroes;
src/encoder/encoder.c:182:	GRAPH* graph = encoder->graph;
include/graph/graph.h:38://if graph_root is NULL, graph_to_insert->prev points to nothing
include/graph/graph.h:39://if graph_to_insert is NULL, graph_root->next points to nothing (handling its sucessor pointer)
include/rs_api/poison.h:8: * into some well-recognized area such as 0xdead000000000000,
include/rs_api/poison.h:9: * that is also not mappable by user-space exploits:
include/rs_api/poison.h:18: * These are non-NULL pointers that will result in page faults
include/rs_api/poison.h:20: * non-initialized list entries.
include/rs_api/poison.h:32:/********** mm/debug-pagealloc.c **********/
include/rs_api/poison.h:47:#define	POISON_INUSE	0x5a	/* for use-uninitialised poisoning */
include/rs_api/poison.h:48:#define POISON_FREE	0x6b	/* for use-after-free poisoning */
include/rs_api/poison.h:49:#define	POISON_END	0xa5	/* end-byte of poisoning */
include/rs_api/poison.h:54: * page->mapping. The core VM should not be doing anything with this mapping
include/rs_api/poison.h:55: * but futex requires the existence of some page->mapping value even though it
include/rs_api/poison.h:65: * arch/ia64/hp/common/sba_iommu.c uses a 16-byte poison string with a
include/rs_api/poison.h:66: * value of "SBAIOMMU POISON\0" for spill-over poisoning.
include/rs_api/poison.h:90:#define FLEX_ARRAY_FREE	0x6c	/* for use-after-free poisoning */
include/rs_api/rs_codec.h:13:// Provides a simple interface for the RS(255,223) reed-solomon error correcting
include/rs_api/config.h:16:/* Define to 1 if you have the `m' library (-lm). */
include/rs_api/config.h:19:/* Define to 1 if you have the `pthread' library (-lpthread). */
include/rs_api/config.h:56:/* Define to the sub-directory where libtool stores uninstalled libraries. */
include/rs_api/config.h:60:#define PACKAGE "reed-solomon"
include/rs_api/config.h:66:#define PACKAGE_NAME "reed-solomon"
include/rs_api/config.h:69:#define PACKAGE_STRING "reed-solomon 1.0"
include/rs_api/config.h:72:#define PACKAGE_TARNAME "reed-solomon"
include/rs_api/list.h:10: *     - #ifdef __KERNE__ and its #endif
include/rs_api/list.h:11: *     - all #include line
include/rs_api/list.h:12: *     - prefetch() and rcu related functions
include/rs_api/list.h:15: * - kazutomo@mcs.anl.gov
include/rs_api/list.h:32:#define offsetof(TYPE, MEMBER) ((size_t) &((TYPE *)0)->MEMBER)
include/rs_api/list.h:42:#define container_of(ptr, type, member) (type*)( ((char*)(ptr)) - offsetof(type, member) )
include/rs_api/list.h:46:        const __typeof__( ((type *)0)->member ) *__mptr = (ptr);    \
include/rs_api/list.h:47:        (type *)( (char *)__mptr - offsetof(type,member) );})
include/rs_api/list.h:52:        ((type *)(__mptr - offsetof(type, member))); })
include/rs_api/list.h:58: * These are non-NULL pointers that will result in page faults
include/rs_api/list.h:60: * non-initialized list entries.
include/rs_api/list.h:72: * using the generic single-entry routines.
include/rs_api/list.h:85:	(ptr)->next = (ptr); (ptr)->prev = (ptr); \
include/rs_api/list.h:98:	next->prev = new_input;
include/rs_api/list.h:99:	new_input->next = next;
include/rs_api/list.h:100:	new_input->prev = prev;
include/rs_api/list.h:101:	prev->next = new_input;
include/rs_api/list.h:105: * list_add - add a new entry
include/rs_api/list.h:114:	__list_add(new_input, head, head->next);
include/rs_api/list.h:118: * list_add_tail - add a new entry
include/rs_api/list.h:127:	__list_add(new_input, head->prev, head);
include/rs_api/list.h:140:	next->prev = prev;
include/rs_api/list.h:141:	prev->next = next;
include/rs_api/list.h:145: * list_del - deletes entry from list.
include/rs_api/list.h:152:	__list_del(entry->prev, entry->next);
include/rs_api/list.h:153:	entry->next = (struct list_head *)LIST_POISON1;
include/rs_api/list.h:154:	entry->prev = (struct list_head *)LIST_POISON2;
include/rs_api/list.h:160: * list_del_init - deletes entry from list and reinitialize it.
include/rs_api/list.h:165:	__list_del(entry->prev, entry->next);
include/rs_api/list.h:170: * list_move - delete from one list and add as another's head
include/rs_api/list.h:176:        __list_del(list->prev, list->next);
include/rs_api/list.h:181: * list_move_tail - delete from one list and add as another's tail
include/rs_api/list.h:188:        __list_del(list->prev, list->next);
include/rs_api/list.h:193: * list_empty - tests whether a list is empty
include/rs_api/list.h:198:	return head->next == head;
include/rs_api/list.h:204:	struct list_head *first = list->next;
include/rs_api/list.h:205:	struct list_head *last = list->prev;
include/rs_api/list.h:206:	struct list_head *at = head->next;
include/rs_api/list.h:208:	first->prev = head;
include/rs_api/list.h:209:	head->next = first;
include/rs_api/list.h:211:	last->next = at;
include/rs_api/list.h:212:	at->prev = last;
include/rs_api/list.h:216: * list_splice - join two lists
include/rs_api/list.h:227: * list_splice_init - join two lists and reinitialise the emptied list.
include/rs_api/list.h:243: * list_entry - get the struct for this entry
include/rs_api/list.h:252: * list_for_each	-	iterate over a list
include/rs_api/list.h:258:  for (pos = (head)->next; pos != (head);	\
include/rs_api/list.h:259:       pos = pos->next)
include/rs_api/list.h:262: * __list_for_each	-	iterate over a list
include/rs_api/list.h:272:	for (pos = (head)->next; pos != (head); pos = pos->next)
include/rs_api/list.h:275: * list_for_each_prev	-	iterate over a list backwards
include/rs_api/list.h:280:	for (pos = (head)->prev; prefetch(pos->prev), pos != (head); \
include/rs_api/list.h:281:        	pos = pos->prev)
include/rs_api/list.h:284: * list_for_each_safe	-	iterate over a list safe against removal of list entry
include/rs_api/list.h:290:	for (pos = (head)->next, n = pos->next; pos != (head); \
include/rs_api/list.h:291:		pos = n, n = pos->next)
include/rs_api/list.h:294: * list_for_each_entry	-	iterate over list of given type
include/rs_api/list.h:300:	for (pos = list_entry((head)->next, typeof(*pos), member);	\
include/rs_api/list.h:301:	     &pos->member != (head);					\
include/rs_api/list.h:302:	     pos = list_entry(pos->member.next, typeof(*pos), member))
include/rs_api/list.h:305: * list_for_each_entry_reverse - iterate backwards over list of given type.
include/rs_api/list.h:311:	for (pos = list_entry((head)->prev, typeof(*pos), member);	\
include/rs_api/list.h:312:	     &pos->member != (head); 	\
include/rs_api/list.h:313:	     pos = list_entry(pos->member.prev, typeof(*pos), member))
include/rs_api/list.h:316: * list_prepare_entry - prepare a pos entry for use as a start point in
include/rs_api/list.h:326: * list_for_each_entry_continue -	iterate over list of given type
include/rs_api/list.h:333:	for (pos = list_entry(pos->member.next, typeof(*pos), member);	\
include/rs_api/list.h:334:	     &pos->member != (head);	\
include/rs_api/list.h:335:	     pos = list_entry(pos->member.next, typeof(*pos), member))
include/rs_api/list.h:338: * list_for_each_entry_safe - iterate over list of given type safe against removal of list entry
include/rs_api/list.h:345:	for (pos = list_entry((head)->next, typeof(*pos), member),	\
include/rs_api/list.h:346:		n = list_entry(pos->member.next, typeof(*pos), member);	\
include/rs_api/list.h:347:	     &pos->member != (head); 					\
include/rs_api/list.h:348:	     pos = n, n = list_entry(n->member.next, typeof(*n), member))
include/rs_api/list.h:351: * list_for_each_entry_safe_continue -	iterate over list of given type
include/rs_api/list.h:359:	for (pos = list_entry(pos->member.next, typeof(*pos), member), 		\
include/rs_api/list.h:360:		n = list_entry(pos->member.next, typeof(*pos), member);		\
include/rs_api/list.h:361:	     &pos->member != (head);						\
include/rs_api/list.h:362:	     pos = n, n = list_entry(n->member.next, typeof(*n), member))
include/rs_api/list.h:365: * list_for_each_entry_safe_reverse - iterate backwards over list of given type safe against
include/rs_api/list.h:373:	for (pos = list_entry((head)->prev, typeof(*pos), member),	\
include/rs_api/list.h:374:		n = list_entry(pos->member.prev, typeof(*pos), member);	\
include/rs_api/list.h:375:	     &pos->member != (head); 					\
include/rs_api/list.h:376:	     pos = n, n = list_entry(n->member.prev, typeof(*n), member))
include/rs_api/list.h:398:#define INIT_HLIST_HEAD(ptr) ((ptr)->first = NULL)
include/rs_api/list.h:399:#define INIT_HLIST_NODE(ptr) ((ptr)->next = NULL, (ptr)->pprev = NULL)
include/rs_api/list.h:403:	return !h->pprev;
include/rs_api/list.h:408:	return !h->first;
include/rs_api/list.h:413:	struct hlist_node *next = n->next;
include/rs_api/list.h:414:	struct hlist_node **pprev = n->pprev;
include/rs_api/list.h:417:		next->pprev = pprev;
include/rs_api/list.h:423:	n->next = (struct hlist_node *)LIST_POISON1;
include/rs_api/list.h:424:	n->pprev = (struct hlist_node **)LIST_POISON2;
include/rs_api/list.h:430:	if (n->pprev)  {
include/rs_api/list.h:438:	struct hlist_node *first = h->first;
include/rs_api/list.h:439:	n->next = first;
include/rs_api/list.h:441:		first->pprev = &n->next;
include/rs_api/list.h:442:	h->first = n;
include/rs_api/list.h:443:	n->pprev = &h->first;
include/rs_api/list.h:452:	n->pprev = next->pprev;
include/rs_api/list.h:453:	n->next = next;
include/rs_api/list.h:454:	next->pprev = &n->next;
include/rs_api/list.h:455:	*(n->pprev) = n;
include/rs_api/list.h:461:	next->next = n->next;
include/rs_api/list.h:462:	n->next = next;
include/rs_api/list.h:463:	next->pprev = &n->next;
include/rs_api/list.h:465:	if(next->next)
include/rs_api/list.h:466:		next->next->pprev  = &next->next;
include/rs_api/list.h:474:	for (pos = (head)->first; pos && ({ prefetch(pos->next); 1; }); \
include/rs_api/list.h:475:	     pos = pos->next)
include/rs_api/list.h:478:	for (pos = (head)->first; pos && ({ n = pos->next; 1; }); \
include/rs_api/list.h:482: * hlist_for_each_entry	- iterate over list of given type
include/rs_api/list.h:489:	for (pos = (head)->first;					 \
include/rs_api/list.h:490:	     pos && ({ prefetch(pos->next); 1;}) &&			 \
include/rs_api/list.h:492:	     pos = pos->next)
include/rs_api/list.h:495: * hlist_for_each_entry_continue - iterate over a hlist continuing after existing point
include/rs_api/list.h:501:	for (pos = (pos)->next;						 \
include/rs_api/list.h:502:	     pos && ({ prefetch(pos->next); 1;}) &&			 \
include/rs_api/list.h:504:	     pos = pos->next)
include/rs_api/list.h:507: * hlist_for_each_entry_from - iterate over a hlist continuing from existing point
include/rs_api/list.h:513:	for (; pos && ({ prefetch(pos->next); 1;}) &&			 \
include/rs_api/list.h:515:	     pos = pos->next)
include/rs_api/list.h:518: * hlist_for_each_entry_safe - iterate over list of given type safe against removal of list entry
include/rs_api/list.h:526:	for (pos = (head)->first;					 \
include/rs_api/list.h:527:	     pos && ({ n = pos->next; 1; }) && 				 \
include/rs_api/encode_rs.h:22:	int nn = rs->nn;
include/rs_api/encode_rs.h:23:	int nroots = rs->nroots;
include/rs_api/encode_rs.h:24:	uint16_t *alpha_to = rs->alpha_to;
include/rs_api/encode_rs.h:25:	uint16_t *index_of = rs->index_of;
include/rs_api/encode_rs.h:26:	uint16_t *genpoly = rs->genpoly;
include/rs_api/encode_rs.h:28:	uint16_t msk = (uint16_t) rs->nn;
include/rs_api/encode_rs.h:31:	pad = nn - nroots - len;
include/rs_api/encode_rs.h:33:		return -1;
include/rs_api/encode_rs.h:37:		/* feedback term is non-zero */
include/rs_api/encode_rs.h:41:							 genpoly[nroots - j])];
include/rs_api/encode_rs.h:45:		memmove(&par[0], &par[1], sizeof(uint16_t) * (nroots - 1));
include/rs_api/encode_rs.h:47:			par[nroots - 1] = alpha_to[rs_modnn(rs,
include/rs_api/encode_rs.h:50:			par[nroots - 1] = 0;
include/rs_api/rslib.h:32: * struct rs_control - rs control structure
include/rs_api/rslib.h:35: * @nn:		Symbols per block (= (1<<mm)-1)
include/rs_api/rslib.h:42: * @iprim:	prim-th root of 1, index form
include/rs_api/rslib.h:44: * @gffunc:	Function to generate the field, if non-canonical representation
include/rs_api/rslib.h:64:/* General purpose RS codec, 8-bit data width, symbol width 1-15 bit  */
include/rs_api/rslib.h:75:/* General purpose RS codec, 16-bit data width, symbol width 1-15 bit  */
include/rs_api/rslib.h:101: *  rs->mm = number of bits per symbol
include/rs_api/rslib.h:102: *  rs->nn = (2^rs->mm) - 1
include/rs_api/rslib.h:105: *  >= 3 * rs->nn
include/rs_api/rslib.h:109:	while (x >= rs->nn) {
include/rs_api/rslib.h:110:		x -= rs->nn;
include/rs_api/rslib.h:111:		x = (x >> rs->mm) + (x & rs->nn);
include/rs_api/rs.h:10:// if errors can't be corrected, -1 is returned, otherwise number of errors is returned (can be 0)
include/rs_api/decode_rs.h:22:	int nn = rs->nn;
include/rs_api/decode_rs.h:23:	int nroots = rs->nroots;
include/rs_api/decode_rs.h:24:	int fcr = rs->fcr;
include/rs_api/decode_rs.h:25:	int prim = rs->prim;
include/rs_api/decode_rs.h:26:	int iprim = rs->iprim;
include/rs_api/decode_rs.h:27:	uint16_t *alpha_to = rs->alpha_to;
include/rs_api/decode_rs.h:28:	uint16_t *index_of = rs->index_of;
include/rs_api/decode_rs.h:38:	uint16_t msk = (uint16_t) rs->nn;
include/rs_api/decode_rs.h:41:	pad = nn - nroots - len;
include/rs_api/decode_rs.h:102:					      prim * (nn - 1 - eras_pos[0]))];
include/rs_api/decode_rs.h:104:			u = rs_modnn(rs, prim * (nn - 1 - eras_pos[i]));
include/rs_api/decode_rs.h:105:			for (j = i + 1; j > 0; j--) {
include/rs_api/decode_rs.h:106:				tmp = index_of[lambda[j - 1]];
include/rs_api/decode_rs.h:119:	 * Begin Berlekamp-Massey algorithm to determine error+erasure
include/rs_api/decode_rs.h:125:		/* Compute discrepancy at the r-th step in poly-form */
include/rs_api/decode_rs.h:128:			if ((lambda[i] != 0) && (s[r - i - 1] != nn)) {
include/rs_api/decode_rs.h:132:							  s[r - i - 1])];
include/rs_api/decode_rs.h:137:			/* 2 lines below: B(x) <-- x*B(x) */
include/rs_api/decode_rs.h:141:			/* 7 lines below: T(x) <-- lambda(x)-discr_r*x*b(x) */
include/rs_api/decode_rs.h:151:			if (2 * el <= r + no_eras - 1) {
include/rs_api/decode_rs.h:152:				el = r + no_eras - el;
include/rs_api/decode_rs.h:154:				 * 2 lines below: B(x) <-- inv(discr_r) *
include/rs_api/decode_rs.h:160:							 - discr_r + nn);
include/rs_api/decode_rs.h:163:				/* 2 lines below: B(x) <-- x*B(x) */
include/rs_api/decode_rs.h:181:	for (i = 1, k = iprim - 1; i <= nn; i++, k = rs_modnn(rs, k + iprim)) {
include/rs_api/decode_rs.h:183:		for (j = deg_lambda; j > 0; j--) {
include/rs_api/decode_rs.h:191:		/* store root (index-form) and error location number */
include/rs_api/decode_rs.h:205:    count = -74; // -EBADMSG
include/rs_api/decode_rs.h:206:		/* count = -EBADMSG; */
include/rs_api/decode_rs.h:213:	deg_omega = deg_lambda - 1;
include/rs_api/decode_rs.h:216:		for (j = i; j >= 0; j--) {
include/rs_api/decode_rs.h:217:			if ((s[i - j] != nn) && (lambda[j] != nn))
include/rs_api/decode_rs.h:219:				    alpha_to[rs_modnn(rs, s[i - j] + lambda[j])];
include/rs_api/decode_rs.h:225:	 * Compute error values in poly-form. num1 = omega(inv(X(l))), num2 =
include/rs_api/decode_rs.h:226:	 * inv(X(l))**(fcr-1) and den = lambda_pr(inv(X(l))) all in poly-form
include/rs_api/decode_rs.h:228:	for (j = count - 1; j >= 0; j--) {
include/rs_api/decode_rs.h:230:		for (i = deg_omega; i >= 0; i--) {
include/rs_api/decode_rs.h:235:		num2 = alpha_to[rs_modnn(rs, root[j] * (fcr - 1) + nn)];
include/rs_api/decode_rs.h:240:		/* for (i = min(deg_lambda, nroots - 1) & ~1; i >= 0; i -= 2) { */
include/rs_api/decode_rs.h:241:		for (i = ((deg_lambda <= nroots - 1) ? deg_lambda : nroots - 1) & ~1;
include/rs_api/decode_rs.h:243:         i -= 2) {
include/rs_api/decode_rs.h:253:						       nn - index_of[den])];
include/rs_api/decode_rs.h:262:				if (data && (loc[j] < (nn - nroots)))
include/rs_api/decode_rs.h:263:					data[loc[j] - pad] ^= cor;
include/rs_api/decode_rs.h:271:			eras_pos[i] = loc[i] - pad;
include/ctdd/ctdd.h:21:	printf("\x1b[31mfailure\x1b[0m(%d) (\x1b[31mSIGSEGV\x1b[0m) - %lu tests ran sucessfully\n", signum, ctdd_sucessful_tests);
include/ctdd/ctdd.h:39:		printf("\x1b[31mfailure\x1b[0m - %lu tests ran sucessfully\n", ctdd_sucessful_tests);
include/ctdd/ctdd.h:42:		printf("\x1b[32msucess\x1b[0m - all %lu tests ran sucessfully\n", ctdd_sucessful_tests);
compile_flags.txt:1:-I
Binary file test matches
Binary file .git/index matches
.git/logs/HEAD:1:0000000000000000000000000000000000000000 bd54779bf3d2985ca4ba9bfeed873963f4fdefaf asimos-bot <felipe.asimos@gmail.com> 1613072332 -0300	commit (initial): encoder working in linear time
.git/logs/HEAD:2:bd54779bf3d2985ca4ba9bfeed873963f4fdefaf f52c291e5c73c9e294d6f79a6425a013665faaae asimos-bot <felipe.asimos@gmail.com> 1613642269 -0300	commit: encoder fixed
.git/logs/HEAD:3:f52c291e5c73c9e294d6f79a6425a013665faaae 42f00e686ebd4a09f3a30b8445301e1756c0643b asimos-bot <felipe.asimos@gmail.com> 1613680815 -0300	commit: add decoder test
.git/logs/HEAD:4:42f00e686ebd4a09f3a30b8445301e1756c0643b d35644149197e278399ea60ee6066b58d39ca335 asimos-bot <felipe.asimos@gmail.com> 1613793404 -0300	commit: fixed encoder for good (pop_all_history != pop_all)
.git/logs/HEAD:5:d35644149197e278399ea60ee6066b58d39ca335 9203c94c26ac139c74f40f5f5a27acc891fe4e24 asimos-bot <felipe.asimos@gmail.com> 1613793505 -0300	commit: add srand(time(0)) for actually making rand work
.git/logs/HEAD:6:9203c94c26ac139c74f40f5f5a27acc891fe4e24 b0fe10bc94623204dc19eb631ba376f0f5b98d80 asimos-bot <felipe.asimos@gmail.com> 1613990167 -0300	commit: encoder+decoder test passing
.git/logs/HEAD:7:b0fe10bc94623204dc19eb631ba376f0f5b98d80 938eff74f508d5bfed5c2ee3a5d6f9440cce20cd asimos-bot <felipe.asimos@gmail.com> 1613993851 -0300	commit: add 10^8 test results
.git/logs/HEAD:8:938eff74f508d5bfed5c2ee3a5d6f9440cce20cd 43839002f1665252a8ec92b6168b8ff0484eeafa asimos-bot <felipe.asimos@gmail.com> 1614220591 -0300	commit: first reed-solomon test worked
.git/logs/HEAD:9:43839002f1665252a8ec92b6168b8ff0484eeafa b9362a76e5727044bf48e240bf265c9af2d5d6c7 asimos-bot <felipe.asimos@gmail.com> 1614276660 -0300	commit: add test of reed-solomon with graph
.git/logs/HEAD:10:b9362a76e5727044bf48e240bf265c9af2d5d6c7 b9362a76e5727044bf48e240bf265c9af2d5d6c7 asimos-bot <felipe.asimos@gmail.com> 1614281842 -0300	checkout: moving from master to main
.git/logs/HEAD:11:b9362a76e5727044bf48e240bf265c9af2d5d6c7 50be32c7c443b65439fa743672b8a3a01defc493 asimos-bot <felipe.asimos@gmail.com> 1615428378 -0300	commit: add structure of pseudocode
.git/logs/HEAD:12:50be32c7c443b65439fa743672b8a3a01defc493 50be32c7c443b65439fa743672b8a3a01defc493 asimos-bot <felipe.asimos@gmail.com> 1615489328 -0300	checkout: moving from main to old
.git/logs/HEAD:13:50be32c7c443b65439fa743672b8a3a01defc493 50be32c7c443b65439fa743672b8a3a01defc493 asimos-bot <felipe.asimos@gmail.com> 1615489343 -0300	reset: moving to HEAD
.git/logs/HEAD:14:50be32c7c443b65439fa743672b8a3a01defc493 50be32c7c443b65439fa743672b8a3a01defc493 asimos-bot <felipe.asimos@gmail.com> 1615491682 -0300	checkout: moving from old to main
.git/logs/HEAD:15:50be32c7c443b65439fa743672b8a3a01defc493 50be32c7c443b65439fa743672b8a3a01defc493 asimos-bot <felipe.asimos@gmail.com> 1615496269 -0300	checkout: moving from main to old
.git/logs/HEAD:16:50be32c7c443b65439fa743672b8a3a01defc493 50be32c7c443b65439fa743672b8a3a01defc493 asimos-bot <felipe.asimos@gmail.com> 1615496276 -0300	checkout: moving from old to main
.git/logs/HEAD:17:50be32c7c443b65439fa743672b8a3a01defc493 877429f22900b7197c3ebb6161966510df58f732 asimos-bot <felipe.asimos@gmail.com> 1615502283 -0300	commit: improved string functions
.git/logs/HEAD:18:877429f22900b7197c3ebb6161966510df58f732 8dac71072d1f697d98e20ddcc4afb841bec8c2bc asimos-bot <felipe.asimos@gmail.com> 1615520642 -0300	commit: code generation partially working
.git/logs/HEAD:19:8dac71072d1f697d98e20ddcc4afb841bec8c2bc 5f58a3bcfb8e85781b2271d93d530622bbf018b9 asimos-bot <felipe.asimos@gmail.com> 1615562521 -0300	commit: pseudocode generation working
.git/logs/HEAD:20:5f58a3bcfb8e85781b2271d93d530622bbf018b9 f58a180b927126587936135df775cf0d8ea74977 asimos-bot <felipe.asimos@gmail.com> 1616638351 -0300	commit: watermark runner done (without rs)
.git/logs/HEAD:21:f58a180b927126587936135df775cf0d8ea74977 c9e2f71e036dd9b637eb825a2f4dd4da588b2401 asimos-bot <felipe.asimos@gmail.com> 1617619741 -0300	commit: watermark 2014 metrics done
.git/logs/HEAD:22:c9e2f71e036dd9b637eb825a2f4dd4da588b2401 378be132ba6b52677d0ad0d50232c9f8a30577d1 asimos-bot <felipe.asimos@gmail.com> 1617623213 -0300	commit: bugfix generate_expression leak
.git/logs/HEAD:23:378be132ba6b52677d0ad0d50232c9f8a30577d1 f04be717ae8a90d38d446b4c13a22ba676647088 asimos-bot <felipe.asimos@gmail.com> 1617624537 -0300	commit: changed 2014-only function names
.git/logs/HEAD:24:f04be717ae8a90d38d446b4c13a22ba676647088 f04be717ae8a90d38d446b4c13a22ba676647088 asimos-bot <felipe.asimos@gmail.com> 1617973513 -0300	checkout: moving from main to f04be71
.git/logs/HEAD:25:f04be717ae8a90d38d446b4c13a22ba676647088 dc4ad9afb315031d9299a44cfe5627e4dcda054e asimos-bot <felipe.asimos@gmail.com> 1617974717 -0300	commit: added PSTACK and HSTACK for better abstraction
.git/logs/HEAD:26:dc4ad9afb315031d9299a44cfe5627e4dcda054e f04be717ae8a90d38d446b4c13a22ba676647088 asimos-bot <felipe.asimos@gmail.com> 1617974749 -0300	checkout: moving from dc4ad9afb315031d9299a44cfe5627e4dcda054e to main
.git/logs/HEAD:27:f04be717ae8a90d38d446b4c13a22ba676647088 dc4ad9afb315031d9299a44cfe5627e4dcda054e asimos-bot <felipe.asimos@gmail.com> 1617974821 -0300	merge abstraction: Fast-forward
.git/logs/HEAD:28:dc4ad9afb315031d9299a44cfe5627e4dcda054e 07393fa34e6e596b1cb6a4c1636ddb0ad5ff62da asimos-bot <felipe.asimos@gmail.com> 1617975310 -0300	commit: encoder function don't assume we will use encoder->final_node
.git/logs/HEAD:29:07393fa34e6e596b1cb6a4c1636ddb0ad5ff62da 5e66194495532f9fe3bb3728f47d6fd0955afa85 asimos-bot <felipe.asimos@gmail.com> 1617982390 -0300	commit: encoder functions working allocating graph before main loop
.git/logs/HEAD:30:5e66194495532f9fe3bb3728f47d6fd0955afa85 7b1c68664409a16780be2d54e09400b0b7ee05ef asimos-bot <felipe.asimos@gmail.com> 1617986894 -0300	commit: don't assume order in connections list to get type of edge
.git/logs/HEAD:31:7b1c68664409a16780be2d54e09400b0b7ee05ef 1ca8a45f2bd87615704d180eac1dc2805801bc63 asimos-bot <felipe.asimos@gmail.com> 1617988213 -0300	commit: stacks logic are now entirely in utils/
.git/logs/HEAD:32:1ca8a45f2bd87615704d180eac1dc2805801bc63 8d621ebc90c2ca4c5b5848009f33f83913561330 asimos-bot <felipe.asimos@gmail.com> 1618061984 -0300	commit: encoder2014 is using search edgesedges functions
.git/logs/HEAD:33:8d621ebc90c2ca4c5b5848009f33f83913561330 8d621ebc90c2ca4c5b5848009f33f83913561330 asimos-bot <felipe.asimos@gmail.com> 1618065619 -0300	reset: moving to HEAD
.git/logs/HEAD:34:8d621ebc90c2ca4c5b5848009f33f83913561330 291d2d6b399f6d3692f5e258af78bfbd79c8b6ec asimos-bot <felipe.asimos@gmail.com> 1618065687 -0300	commit (amend): encoder is using search edges functions
.git/logs/HEAD:35:291d2d6b399f6d3692f5e258af78bfbd79c8b6ec 0333fcafb4af2fbd653b2f5394188a2693611e04 asimos-bot <felipe.asimos@gmail.com> 1618065960 -0300	commit (amend): encoder is using search edges functions
.git/logs/HEAD:36:0333fcafb4af2fbd653b2f5394188a2693611e04 167ad863cce53d6c547b250fd6c8f348dbc29708 asimos-bot <felipe.asimos@gmail.com> 1618065995 -0300	commit: encoder is using create_stacks/free_stacks
.git/logs/HEAD:37:167ad863cce53d6c547b250fd6c8f348dbc29708 1055422c9e2ceacb89ea179903f585473fbd564b asimos-bot <felipe.asimos@gmail.com> 1618069038 -0300	commit: using pop_stacks in add_backedge
.git/logs/HEAD:38:1055422c9e2ceacb89ea179903f585473fbd564b 5602688814f5ee23eb87b6388e40317936b81ba4 asimos-bot <felipe.asimos@gmail.com> 1618069591 -0300	commit: add get_next_hamiltonian_node to decoder
.git/logs/HEAD:39:5602688814f5ee23eb87b6388e40317936b81ba4 a57b85423394bc70b1c32d7b2e2f6ed15bd5cf2f asimos-bot <felipe.asimos@gmail.com> 1618070878 -0300	commit: add stacks to decoder
.git/logs/HEAD:40:a57b85423394bc70b1c32d7b2e2f6ed15bd5cf2f 50dc038db86af886ebdd5b0486df0ef42dea66fd asimos-bot <felipe.asimos@gmail.com> 1618074241 -0300	commit: created get_next_hamiltonian_node2014()
.git/logs/HEAD:41:50dc038db86af886ebdd5b0486df0ef42dea66fd dd66a75fa9379e4b70d2069e9a92169f5863af64 asimos-bot <felipe.asimos@gmail.com> 1618080986 -0300	commit: made search edge function 2017-complainted
.git/logs/HEAD:42:dd66a75fa9379e4b70d2069e9a92169f5863af64 ac89bbc72f24e874ca9de9aefd270a7384e48fc1 asimos-bot <felipe.asimos@gmail.com> 1618081064 -0300	commit: removed build/
.git/logs/HEAD:43:ac89bbc72f24e874ca9de9aefd270a7384e48fc1 72cb0b9001520100dab28a295fbd060566d65475 asimos-bot <felipe.asimos@gmail.com> 1618084481 -0300	commit: add function to assert some basic characteristics of the graph structure
.git/logs/HEAD:44:72cb0b9001520100dab28a295fbd060566d65475 234d1a468892378ce3e7a8f70bccf1db6d561aaa asimos-bot <felipe.asimos@gmail.com> 1618084757 -0300	commit: detect if 2014 graph is invalid when there is no backedge in a node
.git/logs/HEAD:45:234d1a468892378ce3e7a8f70bccf1db6d561aaa 24ea8c2962cf9ad3219d83fabc6e16e5a578a1c7 asimos-bot <felipe.asimos@gmail.com> 1618765791 -0300	commit: modularized setup for encoder and decoder
.git/logs/HEAD:46:24ea8c2962cf9ad3219d83fabc6e16e5a578a1c7 24ea8c2962cf9ad3219d83fabc6e16e5a578a1c7 asimos-bot <felipe.asimos@gmail.com> 1618793300 -0300	reset: moving to 24ea8c2
.git/logs/HEAD:47:24ea8c2962cf9ad3219d83fabc6e16e5a578a1c7 42ffb5269691f1589797b42736296d156f9a18a8 asimos-bot <felipe.asimos@gmail.com> 1618831210 -0300	commit: decode/encoder 2017 tests passing for i < 29
.git/logs/HEAD:48:42ffb5269691f1589797b42736296d156f9a18a8 7319e714dc6a3026c38cc478b01ecc4d1ec6d756 asimos-bot <felipe.asimos@gmail.com> 1618837218 -0300	commit: working for i < 30
.git/logs/HEAD:49:7319e714dc6a3026c38cc478b01ecc4d1ec6d756 f7c7f8b8566903aff0dc13bce87402d5f0cc0fe6 asimos-bot <felipe.asimos@gmail.com> 1618838174 -0300	commit: 2017 i < 20000 passing
.git/logs/HEAD:50:f7c7f8b8566903aff0dc13bce87402d5f0cc0fe6 7e6fa9a5e7ce90c3c4ab966a2a64fe98a39eced5 asimos-bot <felipe.asimos@gmail.com> 1618841751 -0300	commit: 2017 is working
.git/logs/HEAD:51:7e6fa9a5e7ce90c3c4ab966a2a64fe98a39eced5 ac1e30e70b5a6be59b5d31add33777d25364865a asimos-bot <felipe.asimos@gmail.com> 1619195627 -0300	commit: with_rs tests passing
.git/logs/HEAD:52:ac1e30e70b5a6be59b5d31add33777d25364865a ac1e30e70b5a6be59b5d31add33777d25364865a asimos-bot <felipe.asimos@gmail.com> 1619196712 -0300	reset: moving to HEAD
.git/logs/HEAD:53:ac1e30e70b5a6be59b5d31add33777d25364865a ac1e30e70b5a6be59b5d31add33777d25364865a asimos-bot <felipe.asimos@gmail.com> 1619198472 -0300	reset: moving to HEAD
.git/logs/HEAD:54:ac1e30e70b5a6be59b5d31add33777d25364865a 83dec3e039b0a165e46d48df7e81927a8fd7a750 asimos-bot <felipe.asimos@gmail.com> 1619198573 -0300	commit: moved get_node_idx and add_idx out of utils
.git/logs/HEAD:55:83dec3e039b0a165e46d48df7e81927a8fd7a750 213e95c24aaddb1dc66c26562be9a9497e03ce8a asimos-bot <felipe.asimos@gmail.com> 1619198719 -0300	commit: made label_new_current_node more generic
.git/logs/HEAD:56:213e95c24aaddb1dc66c26562be9a9497e03ce8a 45539122c202d07528d0cd989699701e7d24ee58 asimos-bot <felipe.asimos@gmail.com> 1619201089 -0300	commit: using label_new_current_node instead of add_idx in decoder2017
.git/logs/HEAD:57:45539122c202d07528d0cd989699701e7d24ee58 055ff3a1b8731a22c89e8590408516779fe693e4 asimos-bot <felipe.asimos@gmail.com> 1619201643 -0300	commit: decoder2017 now detects invalid backedges
.git/logs/HEAD:58:055ff3a1b8731a22c89e8590408516779fe693e4 055ff3a1b8731a22c89e8590408516779fe693e4 asimos-bot <felipe.asimos@gmail.com> 1620653163 -0300	checkout: moving from main to develop
.git/logs/HEAD:59:055ff3a1b8731a22c89e8590408516779fe693e4 055ff3a1b8731a22c89e8590408516779fe693e4 asimos-bot <felipe.asimos@gmail.com> 1620653181 -0300	reset: moving to HEAD
.git/logs/HEAD:60:055ff3a1b8731a22c89e8590408516779fe693e4 055ff3a1b8731a22c89e8590408516779fe693e4 asimos-bot <felipe.asimos@gmail.com> 1620653202 -0300	checkout: moving from develop to main
.git/logs/HEAD:61:055ff3a1b8731a22c89e8590408516779fe693e4 4ae63eeddea66bcb721b7f56b7ad68f197a8214a asimos-bot <felipe.asimos@gmail.com> 1620926840 -0300	commit: add graph_copy
.git/logs/HEAD:62:4ae63eeddea66bcb721b7f56b7ad68f197a8214a 8d94b89d1baf6a93509e9e72756b6b45fe8e6e7d asimos-bot <felipe.asimos@gmail.com> 1620936397 -0300	commit: add distortion_test
.git/logs/HEAD:63:8d94b89d1baf6a93509e9e72756b6b45fe8e6e7d 6c9c115e7b89d656f7a75c13765fe12f2a9aa237 asimos-bot <felipe.asimos@gmail.com> 1620998485 -0300	commit: graph_copy not using array of nodes anymore
.git/logs/refs/heads/main:1:0000000000000000000000000000000000000000 b9362a76e5727044bf48e240bf265c9af2d5d6c7 asimos-bot <felipe.asimos@gmail.com> 1614281842 -0300	branch: Created from HEAD
.git/logs/refs/heads/main:2:b9362a76e5727044bf48e240bf265c9af2d5d6c7 50be32c7c443b65439fa743672b8a3a01defc493 asimos-bot <felipe.asimos@gmail.com> 1615428378 -0300	commit: add structure of pseudocode
.git/logs/refs/heads/main:3:50be32c7c443b65439fa743672b8a3a01defc493 877429f22900b7197c3ebb6161966510df58f732 asimos-bot <felipe.asimos@gmail.com> 1615502283 -0300	commit: improved string functions
.git/logs/refs/heads/main:4:877429f22900b7197c3ebb6161966510df58f732 8dac71072d1f697d98e20ddcc4afb841bec8c2bc asimos-bot <felipe.asimos@gmail.com> 1615520642 -0300	commit: code generation partially working
.git/logs/refs/heads/main:5:8dac71072d1f697d98e20ddcc4afb841bec8c2bc 5f58a3bcfb8e85781b2271d93d530622bbf018b9 asimos-bot <felipe.asimos@gmail.com> 1615562521 -0300	commit: pseudocode generation working
.git/logs/refs/heads/main:6:5f58a3bcfb8e85781b2271d93d530622bbf018b9 f58a180b927126587936135df775cf0d8ea74977 asimos-bot <felipe.asimos@gmail.com> 1616638351 -0300	commit: watermark runner done (without rs)
.git/logs/refs/heads/main:7:f58a180b927126587936135df775cf0d8ea74977 c9e2f71e036dd9b637eb825a2f4dd4da588b2401 asimos-bot <felipe.asimos@gmail.com> 1617619741 -0300	commit: watermark 2014 metrics done
.git/logs/refs/heads/main:8:c9e2f71e036dd9b637eb825a2f4dd4da588b2401 378be132ba6b52677d0ad0d50232c9f8a30577d1 asimos-bot <felipe.asimos@gmail.com> 1617623213 -0300	commit: bugfix generate_expression leak
.git/logs/refs/heads/main:9:378be132ba6b52677d0ad0d50232c9f8a30577d1 f04be717ae8a90d38d446b4c13a22ba676647088 asimos-bot <felipe.asimos@gmail.com> 1617624537 -0300	commit: changed 2014-only function names
.git/logs/refs/heads/main:10:f04be717ae8a90d38d446b4c13a22ba676647088 dc4ad9afb315031d9299a44cfe5627e4dcda054e asimos-bot <felipe.asimos@gmail.com> 1617974821 -0300	merge abstraction: Fast-forward
.git/logs/refs/heads/main:11:dc4ad9afb315031d9299a44cfe5627e4dcda054e 07393fa34e6e596b1cb6a4c1636ddb0ad5ff62da asimos-bot <felipe.asimos@gmail.com> 1617975310 -0300	commit: encoder function don't assume we will use encoder->final_node
.git/logs/refs/heads/main:12:07393fa34e6e596b1cb6a4c1636ddb0ad5ff62da 5e66194495532f9fe3bb3728f47d6fd0955afa85 asimos-bot <felipe.asimos@gmail.com> 1617982390 -0300	commit: encoder functions working allocating graph before main loop
.git/logs/refs/heads/main:13:5e66194495532f9fe3bb3728f47d6fd0955afa85 7b1c68664409a16780be2d54e09400b0b7ee05ef asimos-bot <felipe.asimos@gmail.com> 1617986894 -0300	commit: don't assume order in connections list to get type of edge
.git/logs/refs/heads/main:14:7b1c68664409a16780be2d54e09400b0b7ee05ef 1ca8a45f2bd87615704d180eac1dc2805801bc63 asimos-bot <felipe.asimos@gmail.com> 1617988213 -0300	commit: stacks logic are now entirely in utils/
.git/logs/refs/heads/main:15:1ca8a45f2bd87615704d180eac1dc2805801bc63 8d621ebc90c2ca4c5b5848009f33f83913561330 asimos-bot <felipe.asimos@gmail.com> 1618061984 -0300	commit: encoder2014 is using search edgesedges functions
.git/logs/refs/heads/main:16:8d621ebc90c2ca4c5b5848009f33f83913561330 291d2d6b399f6d3692f5e258af78bfbd79c8b6ec asimos-bot <felipe.asimos@gmail.com> 1618065687 -0300	commit (amend): encoder is using search edges functions
.git/logs/refs/heads/main:17:291d2d6b399f6d3692f5e258af78bfbd79c8b6ec 0333fcafb4af2fbd653b2f5394188a2693611e04 asimos-bot <felipe.asimos@gmail.com> 1618065960 -0300	commit (amend): encoder is using search edges functions
.git/logs/refs/heads/main:18:0333fcafb4af2fbd653b2f5394188a2693611e04 167ad863cce53d6c547b250fd6c8f348dbc29708 asimos-bot <felipe.asimos@gmail.com> 1618065995 -0300	commit: encoder is using create_stacks/free_stacks
.git/logs/refs/heads/main:19:167ad863cce53d6c547b250fd6c8f348dbc29708 1055422c9e2ceacb89ea179903f585473fbd564b asimos-bot <felipe.asimos@gmail.com> 1618069038 -0300	commit: using pop_stacks in add_backedge
.git/logs/refs/heads/main:20:1055422c9e2ceacb89ea179903f585473fbd564b 5602688814f5ee23eb87b6388e40317936b81ba4 asimos-bot <felipe.asimos@gmail.com> 1618069591 -0300	commit: add get_next_hamiltonian_node to decoder
.git/logs/refs/heads/main:21:5602688814f5ee23eb87b6388e40317936b81ba4 a57b85423394bc70b1c32d7b2e2f6ed15bd5cf2f asimos-bot <felipe.asimos@gmail.com> 1618070878 -0300	commit: add stacks to decoder
.git/logs/refs/heads/main:22:a57b85423394bc70b1c32d7b2e2f6ed15bd5cf2f 50dc038db86af886ebdd5b0486df0ef42dea66fd asimos-bot <felipe.asimos@gmail.com> 1618074241 -0300	commit: created get_next_hamiltonian_node2014()
.git/logs/refs/heads/main:23:50dc038db86af886ebdd5b0486df0ef42dea66fd dd66a75fa9379e4b70d2069e9a92169f5863af64 asimos-bot <felipe.asimos@gmail.com> 1618080986 -0300	commit: made search edge function 2017-complainted
.git/logs/refs/heads/main:24:dd66a75fa9379e4b70d2069e9a92169f5863af64 ac89bbc72f24e874ca9de9aefd270a7384e48fc1 asimos-bot <felipe.asimos@gmail.com> 1618081064 -0300	commit: removed build/
.git/logs/refs/heads/main:25:ac89bbc72f24e874ca9de9aefd270a7384e48fc1 72cb0b9001520100dab28a295fbd060566d65475 asimos-bot <felipe.asimos@gmail.com> 1618084481 -0300	commit: add function to assert some basic characteristics of the graph structure
.git/logs/refs/heads/main:26:72cb0b9001520100dab28a295fbd060566d65475 234d1a468892378ce3e7a8f70bccf1db6d561aaa asimos-bot <felipe.asimos@gmail.com> 1618084757 -0300	commit: detect if 2014 graph is invalid when there is no backedge in a node
.git/logs/refs/heads/main:27:234d1a468892378ce3e7a8f70bccf1db6d561aaa 24ea8c2962cf9ad3219d83fabc6e16e5a578a1c7 asimos-bot <felipe.asimos@gmail.com> 1618765791 -0300	commit: modularized setup for encoder and decoder
.git/logs/refs/heads/main:28:24ea8c2962cf9ad3219d83fabc6e16e5a578a1c7 42ffb5269691f1589797b42736296d156f9a18a8 asimos-bot <felipe.asimos@gmail.com> 1618831210 -0300	commit: decode/encoder 2017 tests passing for i < 29
.git/logs/refs/heads/main:29:42ffb5269691f1589797b42736296d156f9a18a8 7319e714dc6a3026c38cc478b01ecc4d1ec6d756 asimos-bot <felipe.asimos@gmail.com> 1618837218 -0300	commit: working for i < 30
.git/logs/refs/heads/main:30:7319e714dc6a3026c38cc478b01ecc4d1ec6d756 f7c7f8b8566903aff0dc13bce87402d5f0cc0fe6 asimos-bot <felipe.asimos@gmail.com> 1618838174 -0300	commit: 2017 i < 20000 passing
.git/logs/refs/heads/main:31:f7c7f8b8566903aff0dc13bce87402d5f0cc0fe6 7e6fa9a5e7ce90c3c4ab966a2a64fe98a39eced5 asimos-bot <felipe.asimos@gmail.com> 1618841751 -0300	commit: 2017 is working
.git/logs/refs/heads/main:32:7e6fa9a5e7ce90c3c4ab966a2a64fe98a39eced5 ac1e30e70b5a6be59b5d31add33777d25364865a asimos-bot <felipe.asimos@gmail.com> 1619195627 -0300	commit: with_rs tests passing
.git/logs/refs/heads/main:33:ac1e30e70b5a6be59b5d31add33777d25364865a 83dec3e039b0a165e46d48df7e81927a8fd7a750 asimos-bot <felipe.asimos@gmail.com> 1619198573 -0300	commit: moved get_node_idx and add_idx out of utils
.git/logs/refs/heads/main:34:83dec3e039b0a165e46d48df7e81927a8fd7a750 213e95c24aaddb1dc66c26562be9a9497e03ce8a asimos-bot <felipe.asimos@gmail.com> 1619198719 -0300	commit: made label_new_current_node more generic
.git/logs/refs/heads/main:35:213e95c24aaddb1dc66c26562be9a9497e03ce8a 45539122c202d07528d0cd989699701e7d24ee58 asimos-bot <felipe.asimos@gmail.com> 1619201089 -0300	commit: using label_new_current_node instead of add_idx in decoder2017
.git/logs/refs/heads/main:36:45539122c202d07528d0cd989699701e7d24ee58 055ff3a1b8731a22c89e8590408516779fe693e4 asimos-bot <felipe.asimos@gmail.com> 1619201643 -0300	commit: decoder2017 now detects invalid backedges
.git/logs/refs/heads/main:37:055ff3a1b8731a22c89e8590408516779fe693e4 4ae63eeddea66bcb721b7f56b7ad68f197a8214a asimos-bot <felipe.asimos@gmail.com> 1620926840 -0300	commit: add graph_copy
.git/logs/refs/heads/main:38:4ae63eeddea66bcb721b7f56b7ad68f197a8214a 8d94b89d1baf6a93509e9e72756b6b45fe8e6e7d asimos-bot <felipe.asimos@gmail.com> 1620936397 -0300	commit: add distortion_test
.git/logs/refs/heads/main:39:8d94b89d1baf6a93509e9e72756b6b45fe8e6e7d 6c9c115e7b89d656f7a75c13765fe12f2a9aa237 asimos-bot <felipe.asimos@gmail.com> 1620998485 -0300	commit: graph_copy not using array of nodes anymore
.git/logs/refs/remotes/origin/main:1:0000000000000000000000000000000000000000 b9362a76e5727044bf48e240bf265c9af2d5d6c7 asimos-bot <felipe.asimos@gmail.com> 1614281860 -0300	update by push
.git/logs/refs/remotes/origin/main:2:b9362a76e5727044bf48e240bf265c9af2d5d6c7 50be32c7c443b65439fa743672b8a3a01defc493 asimos-bot <felipe.asimos@gmail.com> 1615428387 -0300	update by push
Binary file .git/objects/b0/fe10bc94623204dc19eb631ba376f0f5b98d80 matches
Binary file .git/objects/b0/47e38d0ee88a7ebaaa0c528488d9642a0c11b2 matches
Binary file .git/objects/ae/48923ce65b2842409768d802fa450127f70393 matches
Binary file .git/objects/ae/c12c57c394548c44b88af6d411cacd42f7ebf3 matches
Binary file .git/objects/ae/5b39ea8e026fc2274eb6c1f8d711d3002bf464 matches
Binary file .git/objects/ae/90de21ba4bc7d122f4895fa7443ca9aa579c2b matches
Binary file .git/objects/ae/6f3e4a760f4af8ac271cf977256e35485b5323 matches
Binary file .git/objects/ae/8750e7d33149625f5f89905148278310bf4bea matches
Binary file .git/objects/f4/2c4fd47c332f9c4ba70e9ddf6f1236c1664764 matches
Binary file .git/objects/f4/d0d2cd11ddd5eb04a0c3aae4121388a3cd4a42 matches
Binary file .git/objects/f4/152df2253ba1a637fd4448113f658cd4da85a3 matches
Binary file .git/objects/f4/99a07793e4191625f7ea6424eeeff54daac931 matches
Binary file .git/objects/af/806669c1de229a1df456bc9c971113b27a47ea matches
Binary file .git/objects/af/50664d9edcf34c3d4c9723ac77622a20d41381 matches
Binary file .git/objects/af/1c7e52f2146142d9d4127f0a6d64311f7f20ed matches
Binary file .git/objects/63/1e7797bb6e46247243f3e8edc802e3d8b817d1 matches
Binary file .git/objects/63/7e7a10fece6c764321191acf4bc42c801134c9 matches
Binary file .git/objects/63/fe9d4a3a99e02b5fda92f57c040f999caed286 matches
Binary file .git/objects/63/31e28abfe8163bfad298194230121794972f6d matches
Binary file .git/objects/d0/225e11895534a2961c7c2037e5bc502ae0a75e matches
Binary file .git/objects/d0/41dfcbe8e4369ab37320f4479098b7b4548a93 matches
Binary file .git/objects/d0/7be1b973c2d601e2629817c0ecbbba55c0eb5e matches
Binary file .git/objects/d0/81006831c89617c4fdbe320d9022f541d8b4af matches
Binary file .git/objects/12/485a467e08c4353d0cf12464c042b5e4f09cb8 matches
Binary file .git/objects/12/d0753f319bb993e3b34ed667511ce4bf5459bb matches
Binary file .git/objects/12/9fb63855739fafd2c4e50caaeb93ba2361ff7e matches
Binary file .git/objects/42/b656636d4f9d25019599a3101260f3836d2da6 matches
Binary file .git/objects/42/71235f9b09c26ef61f9c771a909897da00e83c matches
Binary file .git/objects/2d/948562f0c98ebc8a144ca14cc4d5b4f7794933 matches
Binary file .git/objects/2d/127a54d1eea0586e67ca98375aa1a412f1a36c matches
Binary file .git/objects/2d/e589982dcb2af859f80cb74bf2549ef2a34419 matches
Binary file .git/objects/bd/54779bf3d2985ca4ba9bfeed873963f4fdefaf matches
Binary file .git/objects/bd/59078b85cc5ecfe005f0358eeb70f5db1aab41 matches
Binary file .git/objects/b2/3bc410ce745322a54a9ab149418c65e7f297d6 matches
Binary file .git/objects/08/1e6f70915319bbd9130ae6c8881044d949c990 matches
Binary file .git/objects/08/4ef81791f62b96e52fe19c770b2a2df6b4b4bc matches
Binary file .git/objects/08/aa954be8aec83f03218e56d9fbbab310f309ad matches
Binary file .git/objects/08/f138ccc26ac944a7f7746503276f7d12998d6d matches
Binary file .git/objects/08/fd921fe21055f064a6f5cb2a6db98bdb727fd1 matches
Binary file .git/objects/08/ba37c36bcfd41cacb0d4cecf461719bad0d3d1 matches
Binary file .git/objects/08/7b5bd736e26f99618726c86eff536577109b03 matches
Binary file .git/objects/08/f64f2b91ef527206f9d4001fefc5ce3d62bb8f matches
Binary file .git/objects/08/ed6a4a1410457488a2e25210ef0750341b7358 matches
Binary file .git/objects/08/3bb28b0553e068cd1911896e8c1249860898c5 matches
Binary file .git/objects/45/15f562bacc9cda337e9fc035a3fd0aee2d27a4 matches
Binary file .git/objects/45/8c2b81ed97dfea752e62ad3b956e5c5dc3f9c8 matches
Binary file .git/objects/45/539122c202d07528d0cd989699701e7d24ee58 matches
Binary file .git/objects/45/e7f33a1d055699ed3be6226af463e967834315 matches
Binary file .git/objects/45/e997ebf0fbe9d5ab313f84bb579584663687fa matches
Binary file .git/objects/45/81e06081012084101c1401eacb1e214ea57dfa matches
Binary file .git/objects/45/423cd8fae9c7e73e4142827561011fdfcdfdb7 matches
Binary file .git/objects/24/df6fd9b251e19fb0d8cfbd8cc4e3327906ca07 matches
Binary file .git/objects/24/053d23f09ca096e57e8df75aea5d7b09186bdb matches
Binary file .git/objects/24/e92cfae5554e6956f9bd85d8a93f238fcb34da matches
Binary file .git/objects/1c/2f2d27491e6da8bf01e1ef358c22d728ed4680 matches
Binary file .git/objects/1c/42e569f00e26ed20359fecfba047a3892c7faa matches
Binary file .git/objects/1c/a0dd557b5b951c4e13ab17fa09a869066b22a9 matches
Binary file .git/objects/1c/3f5e796fd24e52e2caeab9acca6ae3f2b2a276 matches
Binary file .git/objects/1c/3aecb47da3c4df091bb1bb30ce943a5eb3cfb0 matches
Binary file .git/objects/c6/442536339b6d691388cd887ced06ec8e1ccf1e matches
Binary file .git/objects/c6/f296f0a4c40b5aa214965dc8c57c0746d970a9 matches
Binary file .git/objects/c6/8feaf4432a3cfb5c2f415d7954ed6b0d63360d matches
Binary file .git/objects/c6/24a880f802356667d12b4be6857d9871559528 matches
Binary file .git/objects/c6/ffe364602ad95bef937aa350ae057a84a19abe matches
Binary file .git/objects/85/58113de9d668224a32064f4353a6417c7933b0 matches
Binary file .git/objects/85/4ea2501301925daa900834af278622d87263df matches
Binary file .git/objects/85/bed46f94414df95b62e6f88f7581e8b0fce97b matches
Binary file .git/objects/85/4cfcf541450314794f8a7c43f552441b44eeb7 matches
Binary file .git/objects/85/7988fb1237f19031ae4527a62c2dbbe12f3e74 matches
Binary file .git/objects/85/aad5cf42f47c37f7bf0db90d4874eea2cad516 matches
Binary file .git/objects/00/991b2865fcedefbfe309ac904eb590f271a445 matches
Binary file .git/objects/00/6a07d289a3a799cb22f89574fb2deff8f96f5b matches
Binary file .git/objects/00/07b86a7cecdd20d2ce6508b7b77eca3e9f5461 matches
Binary file .git/objects/00/56814989744c51a6696a2d0662deece97b3b68 matches
Binary file .git/objects/00/df6ee4e6bae1344e879d685b5fc58d92b4481a matches
Binary file .git/objects/bb/3760f5d87c7aa0b0318353a8c40104ff5a1d02 matches
Binary file .git/objects/bb/82e45904a94de5d30f018793e212dd2dc2b50a matches
Binary file .git/objects/78/ef307b01ad86301ff94b6da6c23a4bdaca310d matches
Binary file .git/objects/78/4e1ad04b63c73462fa9f70a25ec8b3884f3d58 matches
Binary file .git/objects/78/a28507e180362ac07f59c43ee2c8848805f1ad matches
Binary file .git/objects/78/4930c1db25fdcf039da7e173631ddf0f466952 matches
Binary file .git/objects/15/f47abd102ded77aa8a852984016a959ac41a01 matches
Binary file .git/objects/15/016f6a8382802e8f598ca4027d3a40940a89dc matches
Binary file .git/objects/15/302c5ddecd922bb4bea9078f2d8fef5cc2ce38 matches
Binary file .git/objects/15/97783c05d55c2c344f0f245fb81343365b2026 matches
Binary file .git/objects/62/ffb93e9dc8cd59fdb136c2e05b379be027c155 matches
Binary file .git/objects/3c/33e4b55cecaf6d4131d9abeb7452ebde8a2fe7 matches
Binary file .git/objects/3c/83ee2b4d4d4f1499d03078ef9afb18842dc590 matches
Binary file .git/objects/3c/405cc1437e3f2702f4fee5a8b8bddc604e1ec3 matches
Binary file .git/objects/3c/ec552e1a6411cc0d4b05fc7723be25460c7024 matches
Binary file .git/objects/3c/07b55bda0b74283f7fca312ebbe13001b15b43 matches
Binary file .git/objects/2b/ac42a82512681461fe9ec1e864d2461d0ee108 matches
Binary file .git/objects/2b/80a22e3b7d0e5497f72344176c497765db5eb1 matches
Binary file .git/objects/4b/c06d0fcd6230df7928dcd9ed753459a88eab84 matches
Binary file .git/objects/4b/df99edd5d67cb4333731b32c16143fea6d98e2 matches
Binary file .git/objects/4b/fdaa5609ab2ce31c7902d85b02c7ac46862213 matches
Binary file .git/objects/4b/32d41dbc93949f5e418816107847c98ca1e3a0 matches
Binary file .git/objects/4b/15aaeb7b80e569a0cd601589972822523b1b10 matches
Binary file .git/objects/4b/909f03a79b4264c729fdbc045ceba2e52481e8 matches
Binary file .git/objects/4b/033ea05a594724d71f0828f10f7826c78f71c3 matches
Binary file .git/objects/4b/6b83391f6d04867af28658548ee0d1a0194f3f matches
Binary file .git/objects/3e/2c99cd5583cc578f4b9f409a998227dd3772e1 matches
Binary file .git/objects/3e/5b6bd2152b85f57aeccd8b3d5e82807e54814d matches
Binary file .git/objects/3e/a5f932d2a3c3baf9bced963e4c024e80ac1c41 matches
Binary file .git/objects/3e/8e315f040729ee50a0a2c9c2add3cce416fe08 matches
Binary file .git/objects/3e/0319d2fc306f6df73ddfe6e23f2da110c4397c matches
Binary file .git/objects/3e/5f36fe40e80d33a08ca9f3444c324bc4aecee5 matches
Binary file .git/objects/a4/d0968715a7dd2fcfb7cd2584bcb2c92158d842 matches
Binary file .git/objects/a4/e79dac88c773722e69262cff62ee0fd9a57c90 matches
Binary file .git/objects/fd/c5a51d0bfee1972c909e28ae70185f69ff6a96 matches
Binary file .git/objects/fd/fb547f7d7c884b1d99db86564d3164263f1d73 matches
Binary file .git/objects/fd/73ea1f7a870503decb34b82934f79ed209bf4d matches
Binary file .git/objects/fd/caf7b0fbda90aed36d003abaf68c5d85578ea4 matches
Binary file .git/objects/ad/b405871cf5dec521431750e4ccd40b4b8b76ae matches
Binary file .git/objects/ad/1a8bcf76c99b7321f2847d185610d65d3ebb41 matches
Binary file .git/objects/ad/c71e12fe8c6b7c3c7a42b7cb62d03003c02f9a matches
Binary file .git/objects/ad/de2684c391a263f1a4870282c6891369a14029 matches
Binary file .git/objects/ad/1cef4c7953a503c77c1754fea2caf273581ab8 matches
Binary file .git/objects/4d/23a3c165055ea0dbe445341e50df6d74e3b326 matches
Binary file .git/objects/4d/76a44c2454a1423359186cd5152e1d81252abf matches
Binary file .git/objects/4d/b6c9c643c1cd43d7e374185bfa184c04097b62 matches
Binary file .git/objects/6c/54ce8ddbd9620a03eab1c95692f0717bac09c0 matches
Binary file .git/objects/6c/0b3138ea463f65698bf7bd3fc6ec4b28c037de matches
Binary file .git/objects/6c/ea8d51f0ddfc0770dab0eb1a4798d621d1d3dd matches
Binary file .git/objects/6c/a52ed646c146277a3f9cfcaff0abd7715b7c8f matches
Binary file .git/objects/ea/435444d2e11e9503a297997564fd3626e6d782 matches
Binary file .git/objects/ea/86a2ca98eb9904259333480b9df6b8474a181c matches
Binary file .git/objects/ea/9c0b9d811c9f1234b07c65255405c0b78372a2 matches
Binary file .git/objects/ea/3d50cadd6e9d9e08c1ac791be44c31ccd43dcf matches
Binary file .git/objects/ea/f3e9e487e5118aa4f37b95368025d6eda2c440 matches
Binary file .git/objects/9d/7098deb8f533d7c9b754583f5a6fece3c3d3ff matches
Binary file .git/objects/ac/0749913c0fa52dcb4e8b7854cc129a75354a3f matches
Binary file .git/objects/ac/f24db651a2ba0747260f7e829cd473326ea011 matches
Binary file .git/objects/ac/2df4d6eec6fc80a9a6f9889ce9133b3943ac9f matches
Binary file .git/objects/ac/ff467d7352418dc7221fc76bc0f934c86e9fe7 matches
Binary file .git/objects/ac/d904d42b8a0f9c7bfdfcee5785c81cccf32cc1 matches
Binary file .git/objects/ac/89bbc72f24e874ca9de9aefd270a7384e48fc1 matches
Binary file .git/objects/3d/4620d511dac43bfd9687e2735eafdffe26ad40 matches
Binary file .git/objects/f8/f0f7e598e86ab54d44e58f555a72dbac577cfe matches
Binary file .git/objects/f8/16d49720cfe9eb174a09ff4b6e3fd00b297175 matches
Binary file .git/objects/b3/3da3f5c82c8eecfbbf6f06a29216d66b73fee7 matches
Binary file .git/objects/b3/eb3f14e6b148982b372a4ddb1fba2b9340e430 matches
Binary file .git/objects/b3/3357e91a5a59f0f83fe7f73d5de2c2e47cc943 matches
Binary file .git/objects/b3/6b60d6e2a45b66fde8351293ba9a1d5c6de678 matches
Binary file .git/objects/b3/7d4ea21099ccc51d70c2de886f4c1a84ab192a matches
Binary file .git/objects/2c/a2def2fa1ae6e9e6e80a3e02e06208fd2691e4 matches
Binary file .git/objects/2c/c17a101b8782f93985497d510ad33a21f16940 matches
Binary file .git/objects/2c/af74c29f5a50cc31eadb463766dc8a8b670cb2 matches
Binary file .git/objects/2c/7b0ac34e265c0b7e88184c2b15ba93ebbbdc17 matches
Binary file .git/objects/2c/7ff40c394841e5d9a65713e110ea0558094001 matches
Binary file .git/objects/2c/438620fa4b847e528c0c4c962a1d256ca8c0d0 matches
Binary file .git/objects/2c/9ee24973af75f4994b81556b98389f9776f398 matches
Binary file .git/objects/2c/2bef8aa848e05164e4f5410a790c0a6162dd69 matches
Binary file .git/objects/2c/04f2ba9a5c05ab969469a27fe38d10f6aac880 matches
Binary file .git/objects/2c/4440d221af85d1830b7bff9574bc621d4c3914 matches
Binary file .git/objects/77/ad8f19e2312ff931a8b6e448bf8a11640308e2 matches
Binary file .git/objects/77/e451f0b5bec689b894de2d6bad8b72c34c28d5 matches
Binary file .git/objects/77/430041d8559facf13c58307d7064ad0dcfc404 matches
Binary file .git/objects/77/aaac964cbdecee5348a9ceb4a5b60d9e155464 matches
Binary file .git/objects/77/8db41dd4f76ee5a78af41fbbe153f04582c035 matches
Binary file .git/objects/a9/6021472587dec16f2fa5170a2cb33540f763c9 matches
Binary file .git/objects/a9/85cacaa228b94e923602dcc3a05862687a28d2 matches
Binary file .git/objects/5a/d797c722581109787375ed0b7b3173a963df77 matches
Binary file .git/objects/5a/e76baa8659d192eba04ee0a1302aa6b1bf688d matches
Binary file .git/objects/5a/5b839fab5f6c37fceb54af0e305ebfdd2a0a82 matches
Binary file .git/objects/5a/986f6a0ba332b679fec481bbb3e3573c1dc8fd matches
Binary file .git/objects/5a/eda2dc46d35f5ed868a7ae79edb0c501696159 matches
Binary file .git/objects/5a/1532a1b910cd1c24fc9b7947fdf8adae538c52 matches
Binary file .git/objects/57/199a29dd34a44020648c2ad296a2d31574b80f matches
Binary file .git/objects/57/4cf7da8ba10d4f67c76aea7ca75247b6205533 matches
Binary file .git/objects/57/25d5e4d323847757a214c28baba45960bc6b34 matches
Binary file .git/objects/57/8b70ce2e460feb6036eee73990d43629ce29da matches
Binary file .git/objects/f3/6098b02b70f4554a19b86961fda89b3be8a260 matches
Binary file .git/objects/f3/0c5fd88521a6e1c58217512fa9ec1ef1e01280 matches
Binary file .git/objects/54/7cfc3e0c17c64ec7635b0da43e2557008519b1 matches
Binary file .git/objects/54/9bfa72e74058958b02c64cb23a1684727447b7 matches
Binary file .git/objects/8f/abc40f00be74fc25f43909e09d92a841008565 matches
Binary file .git/objects/8f/b8d3b78e0b70eef2024e046af14ac3211990e7 matches
Binary file .git/objects/8f/766de4e1ad7dc2f3e47ec906833998eea1523f matches
Binary file .git/objects/8f/13fc41352357a968b13446cc07db30f2c873ae matches
Binary file .git/objects/8f/2f6554f571a7440ea67c6d18dc0b9b75444985 matches
Binary file .git/objects/e0/a31cdedaa57a88577b5184cd02cd11b55c4900 matches
Binary file .git/objects/e0/b7c4863c7abbdabd593dbca88b2ede3528bb13 matches
Binary file .git/objects/e0/bf9cab87c8e56b419ea794fef56fbd1dd4a7c4 matches
Binary file .git/objects/1e/482a9e7b670e164868f989b1cabdcbe107add4 matches
Binary file .git/objects/1e/17d0d39f2ef607290f4c76b608b6b44cb6f6fb matches
Binary file .git/objects/1e/c9ee612a7b0e0ba23e95d95b2d6373358b27ea matches
Binary file .git/objects/1e/d3eceb0576633e27cd72cb8038f0fcf349776a matches
Binary file .git/objects/1e/f2c5296dfebdf108ba61ce4e1f027149e19fea matches
Binary file .git/objects/1e/3b4fd49f9b4a890d62ea88d66ccafed39276e0 matches
Binary file .git/objects/21/678b16a8c53f347ad10c876365edcea708a9fd matches
Binary file .git/objects/21/7747cfd8efefe27e5faeebc0c46457bbca23df matches
Binary file .git/objects/21/a46e40d0c4357e92f73126c4f3e641da7459aa matches
Binary file .git/objects/21/5e6c83ddb8dda652623c2b0fde8e2377f3249c matches
Binary file .git/objects/21/5be64216a308098d6f32a2fd12ae27cebadbff matches
Binary file .git/objects/21/0ae7873897e06b82a6ac5ce0efb512e7ce97e3 matches
Binary file .git/objects/34/f84713964359412317fedc8a1ebf15bb29b78a matches
Binary file .git/objects/34/2f0d7f72a0ec4a78a393a732943d40e010f13a matches
Binary file .git/objects/34/066ffd893d733b8134da1b57915bec314afb48 matches
Binary file .git/objects/34/ec42b68bc24e555be30108160b2b9e56070c86 matches
Binary file .git/objects/5e/03b72cfaa885ce6fb5beba3bdb2c6b56b1dabc matches
Binary file .git/objects/5e/c96cc2ff61f8eea2594f7ed1c0a3241b2e9c7c matches
Binary file .git/objects/5e/f8b3dd4fa0a99d2adf3886be6d950cd96626d2 matches
Binary file .git/objects/5e/bd4dd276c956323f2bc6bcbf2342feb8c2405c matches
Binary file .git/objects/5e/58f35d4e005ca5ed89d42706616eb950251fa4 matches
Binary file .git/objects/c0/ce6b792f8e6676061c980e599c5e3408666be2 matches
Binary file .git/objects/c0/9a999609a313c083df2bc19fbfa566e5b6a9e4 matches
Binary file .git/objects/c0/4411a6992ef1566bfead76c7a639b8e9bd7d22 matches
Binary file .git/objects/c0/534c1d758b5e6c4cadeb603d48c46bca6484e7 matches
Binary file .git/objects/c0/eb502726512e16d892b1cd176ec935b7cada27 matches
Binary file .git/objects/5d/229af92a4d84fd82ceb7f0f0031363ef76dd64 matches
Binary file .git/objects/5d/6dcced094a321eeaf3214cc63ec0334d8fc912 matches
Binary file .git/objects/e7/7829041c437fd43e075b0e323b8a126af3504f matches
Binary file .git/objects/b5/f0bea63d3eccbb96d8fdff0969227ff93137f0 matches
Binary file .git/objects/b5/1ca1d08d95df55bc7ba49048b246b290ef9500 matches
Binary file .git/objects/b5/9a4818e479ae9e1b964adcdfc6ce25a43d0b12 matches
Binary file .git/objects/cf/9343813e9206495009cea408a86d2d74cbe85a matches
Binary file .git/objects/cf/74ec0a9f83e53b92a8559f2158ed2c25cedd14 matches
Binary file .git/objects/cf/91cae9b8ba1b90dc930ece8a79d55fa1c81d00 matches
Binary file .git/objects/cf/c892c8a8e6f950dd3a429f6084b863cdb7db6a matches
Binary file .git/objects/cf/e01142f388223d7ae051a529b8012c9a5bdc6a matches
Binary file .git/objects/cf/d0e172ede45a28944179648c163a14bd02598c matches
Binary file .git/objects/9a/f8c7b19c48bd42e489d845084ac51475185861 matches
Binary file .git/objects/9a/b6a36cb46f17ed3da7a58133f671bd224419e9 matches
Binary file .git/objects/9a/1890bcb1570c774c0b650164733cc9d999c6f4 matches
Binary file .git/objects/52/44fff44cbce5679f72b1ffdace4a5fb18763dc matches
Binary file .git/objects/52/9b4864829739b6d395878408a0abbaf37e3e29 matches
Binary file .git/objects/52/91b99a4d73f5bfea06b70e6dcd3eae8329b1ce matches
Binary file .git/objects/52/56f596b097dcc360d8c070b756ea2013e2daf5 matches
Binary file .git/objects/52/e03671cdcb55c7bbd27ca0a036b7bac76d27fc matches
Binary file .git/objects/52/ee88b9c08af0cd1dfb8305c089725b1dc08550 matches
Binary file .git/objects/4e/4abd5d2b78db4170bcad63f919b43fce2ee146 matches
Binary file .git/objects/4e/84b18ae456fc2c7da5722015f83e2f94665ce8 matches
Binary file .git/objects/4e/ffdd887e01606f735688679609c525eee21c25 matches
Binary file .git/objects/4e/71c78d1f440b5c4941ea110cfdd5b15107c410 matches
Binary file .git/objects/4e/5e259723632a334b5babb33ed9ab663f6c4de0 matches
Binary file .git/objects/4e/1909bef9e54760d3b29e2a97c7695ef73b4303 matches
Binary file .git/objects/4e/1d3e4eaa09baefcd38b4a04e9267e1b4582e83 matches
Binary file .git/objects/d2/6be8be9b31dd72b943a3ab75a9653eb51dc59c matches
Binary file .git/objects/d2/2ce94cf175edf4b68ab74054ed2043f653c356 matches
Binary file .git/objects/d2/68764c430a4d62a397fe35767aa78b912676cb matches
Binary file .git/objects/d2/6f4198a31bd8586a752035c3511af2a27d8d06 matches
Binary file .git/objects/d2/5f9500d4443e1835dd140f7918e02163674c4d matches
Binary file .git/objects/0b/6a8058d3798af02ed6b15353546a72bc51bd50 matches
Binary file .git/objects/e8/0909d13321c436526a350fd039bc7c4e602367 matches
Binary file .git/objects/e8/9df125b63733c8401e61b01a2b7a5b583ae506 matches
Binary file .git/objects/e8/fa9b6a785f0b245717b2d15765409f30716327 matches
Binary file .git/objects/e8/0016f389fa3187eb7b303e93fa1764f4819e16 matches
Binary file .git/objects/e8/9b5d541add0d9fd585961dd2c213fe117dee5d matches
Binary file .git/objects/e8/630ab4d5ec12c89978ab76e462febeb382c744 matches
Binary file .git/objects/e8/252362f87d0c5b6a81d67759da6d1346e193de matches
Binary file .git/objects/e8/ead6024b3ea8faa39d9d7ef14b72a27465ec2f matches
Binary file .git/objects/30/3e02dc9fb080cba446ec45bfa4fd1e355b60a2 matches
Binary file .git/objects/30/847d4684bb165640d91ca18644cec1830a973f matches
Binary file .git/objects/30/466fc41c9075fba68f5537bf8f2d84ea20043e matches
Binary file .git/objects/ef/de798a6cbeae3076d3b8c5efd27a48be839379 matches
Binary file .git/objects/ef/ccba8029d541ad19b0f8181a1e97ab7a2f0232 matches
Binary file .git/objects/ef/32ad9c4ccae10e8a1682d5e28890755af0c2f1 matches
Binary file .git/objects/ef/196c5803cc7b05fc163ec589f236795d65bcde matches
Binary file .git/objects/ef/4357fd3c81bcc9d01c3a7f0a4970bafac1e3ff matches
Binary file .git/objects/ef/6d67d4b139294a1c240ab4db7ecc5909612d37 matches
Binary file .git/objects/73/943265f8174979bdd8804f71b3f4265a966eab matches
Binary file .git/objects/73/19e714dc6a3026c38cc478b01ecc4d1ec6d756 matches
Binary file .git/objects/73/3969be4b1848c8cf4d09b549bfa0fc243e5c2a matches
Binary file .git/objects/73/6abf46ef57d1588cd79ce25d107bebc39b3816 matches
Binary file .git/objects/73/1040bfad13335b71b2444cd89e570f086ecf58 matches
Binary file .git/objects/73/2fe3227d61380bbd879afc7b1378bc0d76a89d matches
Binary file .git/objects/73/7c9fc51bb82dbcf32716575530371ec3770e5f matches
Binary file .git/objects/df/1c2c7475c74b3ff941b5dc832a7142abfc3ddc matches
Binary file .git/objects/f1/5691448e68603026da88905d7456d5f43a707d matches
Binary file .git/objects/f1/4ce4d45df1be302789503cee0593e40fa5c69e matches
Binary file .git/objects/f1/a85cfeb36d03112e34aef68a5c0575ce2c0754 matches
Binary file .git/objects/9c/06e8d47874babf8b45638fa2261780119defe4 matches
Binary file .git/objects/50/dc038db86af886ebdd5b0486df0ef42dea66fd matches
Binary file .git/objects/50/659281b07c23de46399539488a9edc1406d6e2 matches
Binary file .git/objects/50/f31a35ae98c638f3684e36f7ac58589e45ea30 matches
Binary file .git/objects/50/ed85230344b9af219cf2b8ba1b1b350ce0b72a matches
Binary file .git/objects/50/6fb2c615e0f0945a0bf479f8910dba092fcb1b matches
Binary file .git/objects/50/dc939ff403c94959b8df3e41c7e12df90682dd matches
Binary file .git/objects/50/8b33c7c4e6b698befd04e55a093efd0c05f643 matches
Binary file .git/objects/50/386b0850b59f4a22baa3b012450c46489195fb matches
Binary file .git/objects/50/f8c6bb938d90ce940763bedce82cbd096d14f0 matches
Binary file .git/objects/50/ef33423eb8abb96bc97faf3289051ecac45b61 matches
Binary file .git/objects/ca/15eb31ffd8fceac2984e3618df98cd3443530c matches
Binary file .git/objects/ca/3310a94dcecb89b0314b6f6af3cddad2b1af31 matches
Binary file .git/objects/ca/62752402638468280f077b299891e8040f5971 matches
Binary file .git/objects/ca/7b5fdc70c635285db1cf66aa4901b6eeaf86ff matches
Binary file .git/objects/ca/eeb24ff6d91746241a104b761a303e8b3fd016 matches
Binary file .git/objects/ca/fbce84fad470b2280ae93e599e7f0d3c2a9628 matches
Binary file .git/objects/ca/0fd37ef6bd82564895b6422f973a8019676c4c matches
Binary file .git/objects/ca/45fc03f2e0cdace12af5e4cd73d05db2154f4c matches
Binary file .git/objects/48/149b3a8ab7cb96aaca606e495da0f18b9a87c3 matches
Binary file .git/objects/48/f81798cdeb15dd254e08df3e028048a5213faa matches
Binary file .git/objects/48/d3899d372a0159339d7dc3ae616323def2ce6d matches
Binary file .git/objects/48/aa2b7f63f893b92b40a9de3b5288fef652e4f3 matches
Binary file .git/objects/55/83d9c89b9bfd8455316a8787bce3862cab596c matches
Binary file .git/objects/da/275da5756d6f08b292726cd36c7d000bf721eb matches
Binary file .git/objects/da/ee9a984ee994a2a2b479d9ff205e113d52cc33 matches
Binary file .git/objects/da/8f5cda61dce09cb00633eb3c85134c9023fa3e matches
Binary file .git/objects/64/2b15e38f49407cea52628870cbbc3504f17f8c matches
Binary file .git/objects/64/b25ca99dd675dce33c8e6fa5d65c1898987f1a matches
Binary file .git/objects/64/6f61e62aad575c27905ffd711036e18fc50188 matches
Binary file .git/objects/64/d8c445283dd9542ed85fda96347859b6e13c7e matches
Binary file .git/objects/eb/87c044229760071862361ee3ecad683fb24445 matches
Binary file .git/objects/f9/a6928b33167740c1e7e7c4339cd04d64462356 matches
Binary file .git/objects/f9/9063b63dec9baa0087a018aca01b23174b83b6 matches
Binary file .git/objects/f9/52e179c2bea6c9468bb9d18b9d2b0b30773cf7 matches
Binary file .git/objects/27/d828e87db2d29afaaab14fd0b286130f0a7498 matches
Binary file .git/objects/27/e090eecca40dcf89b51992be6fd334b845d7f6 matches
Binary file .git/objects/6b/78a2d05a590195d9ccaae284aed163e14edc55 matches
Binary file .git/objects/6b/4fb76afc633b3c39e55814f5dfcd80980f1cf2 matches
Binary file .git/objects/6b/50abdba57fc6d55d2736ae032fc44e294c4b24 matches
Binary file .git/objects/6b/a02a09d58a4badfb1dbb3cb48571d6df75aa01 matches
Binary file .git/objects/6b/36665cb544aa8e28ddc7dac69e1521b344d23b matches
Binary file .git/objects/0d/9d58e39661369c1398d09c793c13d374077a86 matches
Binary file .git/objects/0d/d27c8ca1cd455eda5a11c26a9f76819d063072 matches
Binary file .git/objects/0d/62d7dfd890ad50792f18292ff80996ce32ea61 matches
Binary file .git/objects/0d/bd00ec6082f16c0d6ee1b2cf786fe7f9221cac matches
Binary file .git/objects/a2/b118eeac1dfd64767eb83f849d15c546393f4a matches
Binary file .git/objects/a2/8be802221449666f1345d53bddfa710c0a8fce matches
Binary file .git/objects/a2/5a8e9d6c06ea3b01f1e02c319bd1e6e427feda matches
Binary file .git/objects/a2/c912e7786d49111482fcef28cda41a90b5c3f0 matches
Binary file .git/objects/84/68984438043b356adf88a803c896d89712b5d5 matches
Binary file .git/objects/84/0b5a12bd8ad1670652b62bbca4a6111fe32b2c matches
Binary file .git/objects/84/446a2ddba1a315239556be24380dbb125a4cb9 matches
Binary file .git/objects/36/55947681c9c0c8bbedab5583a165c16ab971e0 matches
Binary file .git/objects/36/33c9ad80ea56404f45c509180bdce897dfbebf matches
Binary file .git/objects/36/a6331cc67b269ed74d4d758d2ae40981a7457f matches
Binary file .git/objects/36/1dcb793d7318eec1c1049a2bfa49b1478a9b03 matches
Binary file .git/objects/fa/88a62b406c3545e73b7a52e2c73a2f5ff4effc matches
Binary file .git/objects/fa/e31bf51e6d2e910a198a7184fce9eae7df711d matches
Binary file .git/objects/fa/429830504dba70f4c5d22f8965704a271a47f7 matches
Binary file .git/objects/fa/c32fe1fbd7887b118459987977c713e191cc9d matches
Binary file .git/objects/e4/bf74e5e67a9dcb537f277c9985c95a1715e34d matches
Binary file .git/objects/e4/ee158b7eaaf2b41e84f693e0a5caead4c8e572 matches
Binary file .git/objects/e4/e1a907cfea9627c9239977872de9c41220f6f8 matches
Binary file .git/objects/e4/3d6bb08787f1ede233c8f62b5fe6f81b2f81b6 matches
Binary file .git/objects/e4/c2cb0bd021707db18269186dd7e00211961919 matches
Binary file .git/objects/03/63506a3207ea46f08d94316cba059e3766009d matches
Binary file .git/objects/03/6b2d141e8e0c21418b22afaa11227d707f3447 matches
Binary file .git/objects/03/2edbe7e55805cb63f55cbdbe209e801edfafcd matches
Binary file .git/objects/03/f21bcab4ef28a67d4810f4bf2ad70e82f68cf5 matches
Binary file .git/objects/0f/871665903415eb36da1a03a7957db513bf3269 matches
Binary file .git/objects/0f/d21e4436e565c63ba3620d3b183dedd5d91534 matches
Binary file .git/objects/0f/d874fe22d3e1d83386f0b384441e57471c542e matches
Binary file .git/objects/f2/d692f0ce2b15631d7ef4003058a80fb1551891 matches
Binary file .git/objects/f2/884dc37aeb1e54c638755c181e9fb5fa910484 matches
Binary file .git/objects/c5/6e4e4c7b5cde8576480b7124181d424059d6e4 matches
Binary file .git/objects/c5/c4c472dfe84bbbdea9b0c0a5ba73fd267427a6 matches
Binary file .git/objects/c5/9f7ed903519435a176269b1f5e1342254e206b matches
Binary file .git/objects/a8/dbb9412f79e09b2ea2f51d15c9db06056ff203 matches
Binary file .git/objects/a8/02a86fde6ec481cb40e8d5cc50242ca0e6cb8d matches
Binary file .git/objects/a8/8fa2a6a4fec7a8a33e9bebd35cd2a43d0139ad matches
Binary file .git/objects/a8/403bd0c2a7cec21b37a36857c7239c29cb8790 matches
Binary file .git/objects/a8/762bb366c68b267d27a14d5716beba81833b52 matches
Binary file .git/objects/cb/59fca66bed66f18cf590410bf4feb862e3131e matches
Binary file .git/objects/cb/98537054c8b978fdfea1df3b34a79464690062 matches
Binary file .git/objects/cb/7a599cadf8c3f97a2eee94904d55c9b0534d88 matches
Binary file .git/objects/cb/a559fd851afcbb45b46736509e0baf580b1252 matches
Binary file .git/objects/06/392a1a2d0aa7f00e8c59ba0593337088cb40d7 matches
Binary file .git/objects/06/9fdcf5c1a02655ff8078eabfbc174dd9a5b637 matches
Binary file .git/objects/06/8c430efc9d9cfe5c90d93b805da77115d7d9ee matches
Binary file .git/objects/06/dd096d9fdea47c9b291185facdb059ca61f37d matches
Binary file .git/objects/fb/50f71d5e63796450a7e0de64fe0a9774f48a9e matches
Binary file .git/objects/dd/66a75fa9379e4b70d2069e9a92169f5863af64 matches
Binary file .git/objects/dd/0a9d855dd3130e83e2348bc41ee864e215cba9 matches
Binary file .git/objects/8e/731d5c5f353bf48456658bb8663b28fd5b6bb0 matches
Binary file .git/objects/8e/87de921afddd30c665918adac20b083510d13e matches
Binary file .git/objects/8e/4267bbc8c205163b2e2af12b683d1faf258ec9 matches
Binary file .git/objects/8e/7c45948a2e381e7ca1e980143f9e3c5949077f matches
Binary file .git/objects/8e/712625d8ef785d171b9e142032cf70fe48612f matches
Binary file .git/objects/d1/0859b9faa83038d024c902643f9c0355808d40 matches
Binary file .git/objects/d1/096a2510555f451ca624d5eee12d4698c5ff14 matches
Binary file .git/objects/d1/ed5df5b1f5b0967f468ec19fbe779fe4281e9e matches
Binary file .git/objects/51/0ca04b2b425d9776963570e46e3b0dd92f08e9 matches
Binary file .git/objects/51/4abdba0214f88caabaa403805df6901a0e854f matches
Binary file .git/objects/51/bc7ec79c77e7bad9763bd9622c09d83e03a32b matches
Binary file .git/objects/3b/26cb0465958f0cb263ea733199fdc4c29bb73c matches
Binary file .git/objects/3b/21630145d58f75cad354050a05240230381ddf matches
Binary file .git/objects/3b/9fc93a178979449b8624f13646ed03c84b3af8 matches
Binary file .git/objects/25/cef50311be7c5111bdaca24bdf2b0a80699b3d matches
Binary file .git/objects/25/a11446faa96bf0df9d64c7cfec16f16b799815 matches
Binary file .git/objects/25/c9b3db06e67b35b625ad7a39863eee90aabcca matches
Binary file .git/objects/25/319c6690581ce34ff997b4f7854376ed6d0429 matches
Binary file .git/objects/80/02181a54cb7ec8d707fe749f39ef862a27c93c matches
Binary file .git/objects/80/46a9987af4c19a2163e26b9050e7e632193a89 matches
Binary file .git/objects/80/52db4ef5e8926037b17200c33167e8c8f4dedc matches
Binary file .git/objects/80/8adcb1ef09dc94310012cb1fdfa2800668ffd2 matches
Binary file .git/objects/80/2800b8ef6c269b1938508fc9597218322e8376 matches
Binary file .git/objects/be/992233585de212dd78f735d48083296b329d32 matches
Binary file .git/objects/be/9d80bb97b720a0ad989b29be37a9d918ff72ef matches
Binary file .git/objects/89/33f25843bbc60e75356d877582db182d1f146a matches
Binary file .git/objects/89/fdfec1c7bc7f7830d93fc334f8cb6fa87312ea matches
Binary file .git/objects/89/faf10c9e99cfb921ca942516286559b009a8f1 matches
Binary file .git/objects/89/d822af642ea6507bd460ba16159f954e3a6018 matches
Binary file .git/objects/89/7d1e89fac897913af21af3fb3e051a210ac46a matches
Binary file .git/objects/89/3d04e1f8cfdf433350b15fc44b0a5c86cca6cf matches
Binary file .git/objects/89/a5d57e2eb599909f236b77fbb434c232b3ed6a matches
Binary file .git/objects/87/9b327bd1dcdc1b3536fa84aa6059844d4d3ac3 matches
Binary file .git/objects/87/c95c127d8742007b2c792d1887a9f222d5c3a9 matches
Binary file .git/objects/87/7429f22900b7197c3ebb6161966510df58f732 matches
Binary file .git/objects/87/380adb6a14e2620b0617600856156b4414f537 matches
Binary file .git/objects/d5/3dd766b60c6025690991b021bc56f577314599 matches
Binary file .git/objects/26/86be374a47040dca708264006c4421bcb8ef63 matches
Binary file .git/objects/26/b0ba340cee96a0a5931308cda9ace0a81db0aa matches
Binary file .git/objects/26/e8d9b30eef19f5c9557cf46ca0afecef5dfc49 matches
Binary file .git/objects/26/8681428a4318891f47f258ff41352fe6a42159 matches
Binary file .git/objects/26/365eaf985a19bf2713211847ac40c58d1e79e7 matches
Binary file .git/objects/26/b41364fae709a0b7b2b1bac54ff67a97c573b1 matches
Binary file .git/objects/26/44e4183c4672642bc25c569c764bdaf105e3d5 matches
Binary file .git/objects/26/ea3e88a87d779371e1511adf545df207aa0ef8 matches
Binary file .git/objects/31/696323128455623af78ea3248a47a3ea36635d matches
Binary file .git/objects/31/4c5a141938e449023d4c69f6b4630f031b87da matches
Binary file .git/objects/31/24cad95fae50d3be256ff10011d7dcadd0dd38 matches
Binary file .git/objects/31/965b73d9d73aa1d798a0faf2caabea5cacf334 matches
Binary file .git/objects/31/d9e58cf7fe8241b1d9d52e8aa450ecf49ffc9c matches
Binary file .git/objects/29/42e4589c6295e43841051739b9fc2b1f365d1d matches
Binary file .git/objects/29/13c7e112f8ca8f6bad08fd657114158be2b05c matches
Binary file .git/objects/29/2328ea028ab17841e4e36acec67bfc0a8e2076 matches
Binary file .git/objects/29/fd7ae906b040f5ec81e7f6a87ea679a718841a matches
Binary file .git/objects/6f/102d726c68709002be04eb8634d759c1404f0c matches
Binary file .git/objects/c1/983038859e67df63866d3dcdde2c01a3e276c0 matches
Binary file .git/objects/c1/6761f8f721d4bb6497885f0ffd9aee2a707e38 matches
Binary file .git/objects/c1/dccbc3e7088a752d61af3c94697ee6e85f7467 matches
Binary file .git/objects/b1/656db3cfb9f20ad3c7f9549cf802e66689429d matches
Binary file .git/objects/b1/c7e69e2dc6e6c79668646dfdfff260622bdd88 matches
Binary file .git/objects/b1/a218cbcb53db7054c84b341650ac64d0b3575f matches
Binary file .git/objects/b1/60662beef359787a177f53a381a3cc3fed4f9b matches
Binary file .git/objects/b1/ead14ce54665f077b141704cae213e47be405a matches
Binary file .git/objects/22/433ebcfef637e1cbd05074e15a3156b0ba27a8 matches
Binary file .git/objects/22/bcd426e351e4fff4c351557192cf9146101c5b matches
Binary file .git/objects/22/a9c795779b6c049a16bb731b6319c131c2b20f matches
Binary file .git/objects/22/c0baf67c31ac700d139764e770f9a4d8b671ed matches
Binary file .git/objects/7f/7bd2eee567e55464f70e8af6878e29aa40769f matches
Binary file .git/objects/7f/88d5c86b7e7fcb32433643435d1ee24b81a8ce matches
Binary file .git/objects/7f/9459b95a2c7133ce18ef5e359f3d4d0c28062f matches
Binary file .git/objects/7f/2a40df397a6816ccb0c5debf194a0c5b11b4f1 matches
Binary file .git/objects/7f/8da17003921c4ee2b3faad81742be8af3a6b2d matches
Binary file .git/objects/7f/54feab3889183ce0ccbc8af21b000e11e62c6c matches
Binary file .git/objects/99/1dd6867154397b65e91fb28128b594798fb7a2 matches
Binary file .git/objects/99/f1a29a848d0b2ced091bd39ad3648a0fbd5fc7 matches
Binary file .git/objects/56/a595c4cf33a5981cba335952163a8ead197088 matches
Binary file .git/objects/56/02688814f5ee23eb87b6388e40317936b81ba4 matches
Binary file .git/objects/56/08aad83a18a146fe79e329ae2d013734874a2e matches
Binary file .git/objects/f0/4be717ae8a90d38d446b4c13a22ba676647088 matches
Binary file .git/objects/f0/9e73357115185324cbf79f85344410cc740b49 matches
Binary file .git/objects/f0/d6065975026fc6c3b8e895c5ae3314cc3d6ec8 matches
Binary file .git/objects/f0/86c74481c5a8216644852a459e7fb883ee2194 matches
Binary file .git/objects/1a/cb0a12698a0cbd6b8307d6de3a0dc1f98216bc matches
Binary file .git/objects/1a/c9f1a6c826c64675acb6d21d46b3f904d7f71c matches
Binary file .git/objects/1a/e12aa1fabbd3254e3ff0190ee6583ebfe248ef matches
Binary file .git/objects/1a/ce62abf0c208d4401ec06ce961f910ec12bb24 matches
Binary file .git/objects/a6/63e7cd34d437ebb5d6279a0055b4516e1a37e1 matches
Binary file .git/objects/a6/4c22d876e81ec2f004bb60f864f7e15bff626c matches
Binary file .git/objects/a6/8335fc830625944f89a2bdec584fcce7e25a58 matches
Binary file .git/objects/a6/c3903f111929571e6d1c399ba1f32daacfb1b8 matches
Binary file .git/objects/a6/595337814f30192c1176533b658aca43f546c1 matches
Binary file .git/objects/a6/9607724c78f1f7fe747cf1357b10e1b2d84c6f matches
Binary file .git/objects/a6/1f47e7d9c90772dea36be98de279b2b558c1f0 matches
Binary file .git/objects/a6/74cbdc3cc1e691a2b4f0180e51c3dd393dd9dc matches
Binary file .git/objects/43/f6793462e46898dee7301be168a562be668467 matches
Binary file .git/objects/43/0d0948cbfb80ab575ba98813e416b8fdf3123a matches
Binary file .git/objects/43/945114b94ecb6bb0df16f55c6a810b0e593dcf matches
Binary file .git/objects/43/29c9f2ae0589c0a1b0ac408e5ff1aa7a125aaf matches
Binary file .git/objects/43/b3458e75f852f9a4f9a6836f33e429b8b164c2 matches
Binary file .git/objects/43/77864a1c0b85207d94a385d868e2e64b874284 matches
Binary file .git/objects/a3/45acd33a3b8ba40f05be87b71ee2d68b388f5a matches
Binary file .git/objects/a3/c57698ebca9e19db1d9740d0cf98dc39f7876d matches
Binary file .git/objects/a3/c1ab19b637d4591bfbb031800a21c667ae1cb7 matches
Binary file .git/objects/a3/633b12f96f9d61a07982a6bc1eb80be20d90ab matches
Binary file .git/objects/a3/767b8e3928f9ac3cd082671fb0b3c20d1b16fd matches
Binary file .git/objects/3a/8ca53cfa4797bd10dc11f8296194726f454e8c matches
Binary file .git/objects/3a/986b20f3a3986bf64fca2d7e5e8681c8516e89 matches
Binary file .git/objects/3a/1b20aa58c8b7c80fedefdc19b4e5a4626bac28 matches
Binary file .git/objects/3a/883c7b1572c3ebb537cc591adc6915033bf773 matches
Binary file .git/objects/3a/d31c503d9043b83bd230e53378ef1e939e0cdf matches
Binary file .git/objects/3a/684b366fe43031eb9f9c595293af435654c550 matches
Binary file .git/objects/3a/db8723aa0c312847ed45f9917978971d9c647d matches
Binary file .git/objects/11/496add0f482c99ad298de3e9d317f90a0ba217 matches
Binary file .git/objects/11/eaf5b248715d1b03be1ca6c4e135c7cbced561 matches
Binary file .git/objects/11/2d18849953d77a5e147637381d2bde723f354e matches
Binary file .git/objects/11/a59cb9c1bfc7cd9308ecf0b0aea1cdd14881fc matches
Binary file .git/objects/11/0bbe4a7f284e2e2ad04481664272890c7adc4e matches
Binary file .git/objects/11/473768cd93353989eeebdf198912ab349bf3ed matches
Binary file .git/objects/11/b7773afec1bb336a6feb30670959e448787e39 matches
Binary file .git/objects/d4/3bc69b088995f1694185e79374380884ae7f2e matches
Binary file .git/objects/d4/92660735f3d992e692dffb06b881efe0e93c57 matches
Binary file .git/objects/d4/17fbd5713711bf76ad35fc2b9830a22bc15b05 matches
Binary file .git/objects/d4/2a0e5c574c9f75270e4f49c8bc74774abb0259 matches
Binary file .git/objects/d4/170b0c23184e16fe5107af1290dd4370eacfa3 matches
Binary file .git/objects/d4/7080e7286b22c43d3f15d9a2538d23558e6b23 matches
Binary file .git/objects/d4/1d30bc0f1b89fd09a6299b59ebaca92e55f7f2 matches
Binary file .git/objects/d4/7f5918526ed066382b8a7143cdb4e5a6a4ba3b matches
Binary file .git/objects/d4/b447db4217c241c0cd87a77aae490f537fab19 matches
Binary file .git/objects/c3/bf2a4e9389a497c9354aa53df729410b7a9842 matches
Binary file .git/objects/c3/3f5f6460c9c4281d851e11a7cfb2bcc01f2f24 matches
Binary file .git/objects/c3/05826db6fe33c9a17a695807132788bd40a13a matches
Binary file .git/objects/c3/37e95a0497dc13e9a53d82abe472fa111f802e matches
Binary file .git/objects/c3/5fa6c9285e13b5be7e8bc034cda8d5ea47452c matches
Binary file .git/objects/1d/5bdb8daf720edb530c72623b0722a2ec513c1f matches
Binary file .git/objects/04/6043ae38b16c8779716c6c1324713385dc24ec matches
Binary file .git/objects/04/0e21c37725d32087d22bb1387fad58462d4607 matches
Binary file .git/objects/2a/6e390ea67c62509444d0b29a0cfc8d1a2f9ed9 matches
Binary file .git/objects/2a/5155d410032b358958f8b387b6e333d2d4ce45 matches
Binary file .git/objects/cc/cffbb12c747485f3aa19515f603fe1ac43a83c matches
Binary file .git/objects/cc/7788ac03cadd1360625e4d9cd60f18874e6d06 matches
Binary file .git/objects/bc/51b31cb88c37982a969095bdeebf18be886e50 matches
Binary file .git/objects/bc/1b94ea0c6fb3a4625b11bb7bd430e6111376d3 matches
Binary file .git/objects/bc/4155386c9fb2d9eef7c5826a5b7a8192bf25eb matches
Binary file .git/objects/bc/918fdd2a919f744f2c892f2735ab1a875980ce matches
Binary file .git/objects/a0/0d3d33bd16c8e94e680cf1f6bce299391c8a31 matches
Binary file .git/objects/a0/47efcc7ad9a368467762c33f9b877512a8e9ea matches
Binary file .git/objects/8a/3e75cde1bc13a0dcd0663976ed3cef76456396 matches
Binary file .git/objects/8a/a2cac9f9ce05cd61595e2f128d81b2cbb73bf3 matches
Binary file .git/objects/8a/87360b7a68ae27ad149a009548122b668544a6 matches
Binary file .git/objects/8a/6cdd9d127a8905ffc73b92ceb31f5a1a0874cb matches
Binary file .git/objects/20/72e9478d79937b48d9fe9838e44af2496adb10 matches
Binary file .git/objects/20/78bb971069bcec133dc57c261bc91b3997aa9e matches
Binary file .git/objects/20/b894a115b8aa9d1dd840fcf7b9cf389a8c0a20 matches
Binary file .git/objects/94/287150a2d1b05644fd5602c5dee37e73c9b645 matches
Binary file .git/objects/94/9848291b70f408b28d4a0c1ffcd68f6ade3a2a matches
Binary file .git/objects/94/721c00f92b01dc359565923809dc55ea127eb3 matches
Binary file .git/objects/94/385a9793295d87f19e2b3406611d29333caf3d matches
Binary file .git/objects/71/f0433d6921a6f84dfd88e59810db16df558690 matches
Binary file .git/objects/71/8e4e69ecaf4869745f2696872fc853deb79b45 matches
Binary file .git/objects/71/80f63cbe7caee8cd413678a03bd343f5ac0199 matches
Binary file .git/objects/71/66d65843bdaec6f6033431e88881fc5078ffd9 matches
Binary file .git/objects/71/57b8a0719a2c85f666b759aca464baf238bd14 matches
Binary file .git/objects/68/44651d5f81b8c56606304ffa6e394c67bc8ecb matches
Binary file .git/objects/68/4cf5d2ef12bfbf6cee3004276a747b49c026bf matches
Binary file .git/objects/68/d515af4dd3a9970b6184085685ccbac542df58 matches
Binary file .git/objects/68/53c425899c720300e33b8954f537af93a47601 matches
Binary file .git/objects/68/ca0e8dbc7856dff42680ddf7eeaeac431bcb63 matches
Binary file .git/objects/68/9b3c94ee9ada4c0e62108cd0dcab48c4d71cc0 matches
Binary file .git/objects/f5/8996a995befbb5c5367a7e52af1268321ea247 matches
Binary file .git/objects/f5/bb713d6257a4f9bdf32d2b36daed23dc6f923e matches
Binary file .git/objects/f5/46933d63ce19820511e498379a57a366d5dc54 matches
Binary file .git/objects/f5/8a180b927126587936135df775cf0d8ea74977 matches
Binary file .git/objects/3f/43c19545e70fe7ea51d54dca8570e591dc03fe matches
Binary file .git/objects/3f/5b8803cb05819b02b71601aeb41f7cc15fa6de matches
Binary file .git/objects/3f/c87f9103c1fbbc36da1579658b1b4d8c67e630 matches
Binary file .git/objects/76/cd6f3b7ecea77a81e1412ab26a5cd6e7db8da5 matches
Binary file .git/objects/de/b82f88b8aba5deb7db4a7ba02a9ddd1201b85e matches
Binary file .git/objects/de/1c133301caabd57df60746960320ba86fee14e matches
Binary file .git/objects/de/232f8aa72f180fbc95695da335dbc96d3cf7af matches
Binary file .git/objects/de/89cf5eb47ff2fc61b98e735c7f1792b6bb4638 matches
Binary file .git/objects/de/07e858e729eb5bf9dcf10704a8d2c2cf7762b0 matches
Binary file .git/objects/2f/58865da6d68f23990af365117071650fa13cd9 matches
Binary file .git/objects/2f/f000e598aee28bdc47d128dfc81e536f758ccb matches
Binary file .git/objects/2f/ce3ed75b8ed3f533a54f9906fe0a34f990760b matches
Binary file .git/objects/2f/c4fcbbd55992ccb8c4bb72fed5077d1848e46b matches
Binary file .git/objects/82/c7e3d39229ff9b30ed985b9555063b34498d2b matches
Binary file .git/objects/82/1791b38b90d78046605bcedcc8adc73064f5e2 matches
Binary file .git/objects/7b/87d4a18c45ce96eac0e5c5e59b6b04b1929d00 matches
Binary file .git/objects/7b/a4572f38dcc922ce64c1b9af327be87c1159d6 matches
Binary file .git/objects/c4/2e50447b2ad9aa3b236dfd735fb5aba68bf336 matches
Binary file .git/objects/c4/068a9814adb7849d071636318f663655444b5d matches
Binary file .git/objects/c4/b9780a8785709c278216ffe4f72f5a63c3edd3 matches
Binary file .git/objects/c4/df8925d2111227008d368ea260b45c0a3cdb85 matches
Binary file .git/objects/c4/d3fd9043415629c96e59385add23da87b3d1e5 matches
Binary file .git/objects/6d/ed2c6d32e994f8561fdd513cb5a72daadf1bb7 matches
Binary file .git/objects/6d/b3435d89fc27e280a3b381dd12834267fed989 matches
Binary file .git/objects/6d/f8cb686ee337099827002cb15ddcf7c5c6c29a matches
Binary file .git/objects/6d/d0b58152fcd6fc24d14e329daa1264bccf3a3f matches
Binary file .git/objects/6d/7a18b98e32b125c26c4f16b2b5decc23418cb0 matches
Binary file .git/objects/6d/9ccc8a32ce574250d52a3adaf61af1ac624f5e matches
Binary file .git/objects/6d/eb025d42ac974c8960794a0aadaf75b8676ee8 matches
Binary file .git/objects/6d/0e8bd7248f63b1ed88e868cc7b4175830044c6 matches
Binary file .git/objects/6d/a43eceda19a5d8f1302276dff5fc2132cfaccb matches
Binary file .git/objects/01/1de1a79b40cb8754b3700cb501a4ccd2b20dce matches
Binary file .git/objects/01/f48e67eaaa0e4743689dfd482c483d681aede4 matches
Binary file .git/objects/01/6b4aa10db64d632b98773398d9f605c13f06b8 matches
Binary file .git/objects/4a/8fe6cf686cd50977aff9583de75c120b8b2093 matches
Binary file .git/objects/4a/d0c77b4d29227764dfff6fabc6e7dcec9e21dd matches
Binary file .git/objects/4a/216a7a46fe309d4c8e0878798570e85b6d5a40 matches
Binary file .git/objects/4a/1723fc874cfcd4fce1d14b8d8c178b58af22bd matches
Binary file .git/objects/47/8f1f981190465fb0dcd39c0b7c3621a4d4e3d9 matches
Binary file .git/objects/47/4640197146fb8a89c42c681434134ed03c4367 matches
Binary file .git/objects/db/80c787a8db5e199507caa87a5966329e4b537a matches
Binary file .git/objects/db/5fdf8f98198ce7e605a3d68b7006368c99b44b matches
Binary file .git/objects/49/437eeb6020c2dacc7df5234f25b3ad231ce427 matches
Binary file .git/objects/49/564a6db5790bf8f4a491f86fdde465741b6323 matches
Binary file .git/objects/49/d5739c92c3e413ace61f434f816cb6b1325cf6 matches
Binary file .git/objects/49/a822d8368da267352a3cd3e4a7bbacb306d816 matches
Binary file .git/objects/49/17d3be3bccf89a26e5c17456609107ccdc5d21 matches
Binary file .git/objects/49/746e7ee57b55bed0842a88aa32afcb5c0cc2e6 matches
Binary file .git/objects/f6/caf84d5f0ff34aa7c75e2f81b6b3f13fba50da matches
Binary file .git/objects/f6/1f0ebf2c734c1bbf9547396e9c4cdf213f9528 matches
Binary file .git/objects/0c/d6c3702375bf3fe6403b927e718d1ad02c42b4 matches
Binary file .git/objects/0c/f3368da40be6340f9aeb9bec463122047a7815 matches
Binary file .git/objects/0c/1e7e442e6e061e354a6dd4ec062593b499646a matches
Binary file .git/objects/0c/f5f369559bfcb7592b17c56a78386a285edb9f matches
Binary file .git/objects/0c/1a4a96118ca681f97d292c41b3b40deabbba7f matches
Binary file .git/objects/0c/3852d24b504059d904a2bc4ac67181836dffa1 matches
Binary file .git/objects/0c/067725404459b6df16b2811148d10d04b51388 matches
Binary file .git/objects/0c/ddc79cccd707f14374c16af0aac2576af2ab62 matches
Binary file .git/objects/1b/2e3f61b03eaca6e8177fe7d0cd1707c08106e5 matches
Binary file .git/objects/1b/2d7130ced7a1e03b982ef527f781eef62238c8 matches
Binary file .git/objects/1b/28de1f6f34c396993d5e0e132265f86ff4d376 matches
Binary file .git/objects/1b/26737724c16380f8349102eb5c3524fd4b10e8 matches
Binary file .git/objects/1b/3567080a5d5deaf06007828affa59ca2331dd0 matches
Binary file .git/objects/1b/ba33eb9696aaa381c22bb9611e2b576564ac1f matches
Binary file .git/objects/1b/8c8d85a673008e8cbee069244527017099a85e matches
Binary file .git/objects/b9/e7d18e6478bfc83b54b0aa7707022106987b60 matches
Binary file .git/objects/b9/a9b26423dff5507258962f7a55e7677ee94596 matches
Binary file .git/objects/b9/794aeff4c20b4fee74cb770ead2116b56506aa matches
Binary file .git/objects/b9/40fb3ec4b8d362efe462b0b43c05b97aa5c42c matches
Binary file .git/objects/b9/5594faa8435e52e83e01dc87c0153b4505ea35 matches
Binary file .git/objects/b9/ce4da3c19f49e81bca0d4b802cba2786e184c2 matches
Binary file .git/objects/7d/853ee59999b41925264245d9e093cb147dd525 matches
Binary file .git/objects/7d/90607e087889438e88165265135637f29856c0 matches
Binary file .git/objects/7d/998088c9d141f72b2b698c81d845d7bd251db3 matches
Binary file .git/objects/7d/94af71c55d7a2de07db1474b3c7260b1df45ac matches
Binary file .git/objects/7d/db4df5db11e75ef3b43c8847f164c4a7720038 matches
Binary file .git/objects/7d/fd56bf7cd19ee5b63eaecf600543e9933b57e7 matches
Binary file .git/objects/96/2e078abb8f66dc31e30fb9f5b28299690b69e9 matches
Binary file .git/objects/96/2f9c2a78f8c763ad25462ff52265aed547d7c4 matches
Binary file .git/objects/96/5eceb34003a5b3e02f553253ee44064391524c matches
Binary file .git/objects/96/08817c4c19ea797951b315e071234b762cce2c matches
Binary file .git/objects/83/12514301d71e56b0306909a5e8a844058fba1d matches
Binary file .git/objects/83/610133933a62df177ff0daf204eeccca6b3103 matches
Binary file .git/objects/83/df1ac88a0858699f5e1a9a5c7d4db126114d1f matches
Binary file .git/objects/83/81b37d5b9105f68e9d274f275abfdbc862baad matches
Binary file .git/objects/83/e4b2005d0dafe0634c5c674282fd331a81a4b8 matches
Binary file .git/objects/83/00d7bc28149e5693946883012bf5abc713a39c matches
Binary file .git/objects/83/d790e5a1c73410bf6b22d18a5964484b85a3f8 matches
Binary file .git/objects/86/682536b066d081e5cdea03d02dcaa1cc035240 matches
Binary file .git/objects/86/eea15a24683b4b8dc9ea616df8960dd792249b matches
Binary file .git/objects/c9/e4e5fb2a2f84bcf2e766a806912b5fd1b3d058 matches
Binary file .git/objects/c9/ad53f461ba44768cbfe49dc5778b6762e24a85 matches
Binary file .git/objects/c9/0fdddf1df3560e92c2aaaa80a9b3ed9daf116f matches
Binary file .git/objects/c9/e160a6c39b24750537d6f4f062adcf95491962 matches
Binary file .git/objects/c9/efc2c8c0b4328192f3837fad88d7897e2976fd matches
Binary file .git/objects/ff/f16e96571965a26aefe17e74cf23b83ae29699 matches
Binary file .git/objects/ff/dbea5c69344896e6ec2519e5f52ed46b4f4686 matches
Binary file .git/objects/ff/e35e7ad9bedc136fc6b2893436cceee5cc8503 matches
Binary file .git/objects/ff/b8b5e62deec15aa437adacf2352a6b32aff654 matches
Binary file .git/objects/ff/aee3a90766e406b3d60dd716db7af8edf6c3b9 matches
Binary file .git/objects/ff/30e5c61a922b686ac644c1976745b8eb3ccfcd matches
Binary file .git/objects/b8/1d840b7e878e044570b0f14a653f58ffadfffe matches
Binary file .git/objects/b8/9be23c05da22b40a1b33f45dbc9fd1006c88c3 matches
Binary file .git/objects/b8/ebfba35dee0db087fe1f67d3317231df8566b1 matches
Binary file .git/objects/b8/91a5c5c7820c8ec0aee0347afb831e104a2d62 matches
Binary file .git/objects/b8/d1893d5d9baeb0dc91cbfc0e4cdb245cd21600 matches
Binary file .git/objects/b8/2865f6a099ef09ec6223ec34f5f8e8d2195557 matches
Binary file .git/objects/e6/cfbf49bf5b4db0b2a0b7858ee500f67562affa matches
Binary file .git/objects/e6/fb5dee8178987575489be42bdf0e616f3b6edd matches
Binary file .git/objects/e6/c50dac396eaa7406745d75027a2e581879f325 matches
Binary file .git/objects/e6/7283f54dfd8cb89f63d54026cc493496b1c2a4 matches
Binary file .git/objects/e6/c6e1ec35d09c3aaf498d5f0af88ba28247d0c9 matches
Binary file .git/objects/0e/aa9252883e6e6c06e1dca8ecdd72327c472f24 matches
Binary file .git/objects/0e/bb1101b1d1309d9c9cde771e0442af6de45924 matches
Binary file .git/objects/0e/483ca8d97a65a71854f78e570693c148b02e1d matches
Binary file .git/objects/0e/c615b5655a3f92253242f01f212b5b3bf6cb1b matches
Binary file .git/objects/0e/c4358370a1eaa4c2f4995ec9c7601666d0e38b matches
Binary file .git/objects/e1/354ab942876c08afbd749f439e1d2b374157d0 matches
Binary file .git/objects/e1/088d4baa66555c44e261cf142f8e6e48a40411 matches
Binary file .git/objects/e1/a490ec4a1347f0a4373237d06403de2e272c6d matches
Binary file .git/objects/e1/6a4dfdef6616d3604dac928e6deb6508a10b31 matches
Binary file .git/objects/e2/91d54f6ecd175bce5ad0c56fc1bac7625c8cc0 matches
Binary file .git/objects/e2/892e4c7cc6efe5aacf2d04bdf80d2de4a1061d matches
Binary file .git/objects/e2/18a1f5d21606f218f37813d356e1b1853fe802 matches
Binary file .git/objects/e2/458991f70c985387d77711c28575f245384cc8 matches
Binary file .git/objects/5b/5c159ed975b49abbaded9165f1069e15fddece matches
Binary file .git/objects/5b/f464da73356476850af0df2ca2ef4557bd92a1 matches
Binary file .git/objects/5b/483b87c5a8c12bd3c4b587a5973fc3162008f7 matches
Binary file .git/objects/5b/54e64bfe734168cef051e7bcb643975de2abe1 matches
Binary file .git/objects/5b/f0655b29c762c94ce5b405f88d3d896ab1ff5e matches
Binary file .git/objects/5b/ef0e31aed5192087bc384476e69a666bd608af matches
Binary file .git/objects/d3/106f880f0e488f2a2561f0158ad37f636cccb0 matches
Binary file .git/objects/d3/18983b05fd849fe924db93f06cd9df6746daa1 matches
Binary file .git/objects/d3/cc9f92b708f6d69089b030fbea5967d7189668 matches
Binary file .git/objects/d3/5644149197e278399ea60ee6066b58d39ca335 matches
Binary file .git/objects/e3/5cedcaf82507f518ca6c70be356d3d27670c77 matches
Binary file .git/objects/e3/836310b9ff898244c6de7a656d08eb7013a4fc matches
Binary file .git/objects/e3/f61f016a839561a002ff34539487cab34b94a0 matches
Binary file .git/objects/e3/a0119c490768092cca99cbd2f01bd5ed5f3a48 matches
Binary file .git/objects/e3/ed1449675a854fcdd738a0a8f05895a6491452 matches
Binary file .git/objects/e3/37bc76488163114da3ffb743559a85aa727495 matches
Binary file .git/objects/e3/c226df1392b981f7b5c627a4c1ded7ade2cd92 matches
Binary file .git/objects/70/7bb582d4976b275ef54de153d1d877b25665b7 matches
Binary file .git/objects/70/a744ee1e12febea9d9409a4e7b6d517c83d242 matches
Binary file .git/objects/70/2827287b868174caaf8b4fc1219e2069e77066 matches
Binary file .git/objects/70/0f9dd941bdcee6af3bd7aa8f14c0131f8df22d matches
Binary file .git/objects/92/17fe6ee5fbfae377b42150f91fdb3793becbcb matches
Binary file .git/objects/92/3754bcf46eb10aa8ece680b0252b071e4ce2b1 matches
Binary file .git/objects/33/d388af3228ef287b90a6d6f12e98f4ca2cbd1c matches
Binary file .git/objects/33/93458abf8b6e076289a1ca005d603edec46146 matches
Binary file .git/objects/91/feb552948ddacdf8b733e49bd5f13a164dafd0 matches
Binary file .git/objects/91/d76389eae772b51cc72d11cc329d7410671002 matches
Binary file .git/objects/91/6ffb9194c6a225ae82a66cc39cb8ebd46db995 matches
Binary file .git/objects/05/37ed80b383bdd4e625e9a92da88824d803109e matches
Binary file .git/objects/05/7714f20e421cff61b04d0de0e63673e8d030e7 matches
Binary file .git/objects/05/f656011ef41067c0e8ff9650c9208c96a2e141 matches
Binary file .git/objects/05/2b36b63333432a5fa2eb11004c0ddad90f8528 matches
Binary file .git/objects/05/05505ee4126f37adcb967aa114f1940c0bcf0b matches
Binary file .git/objects/05/56971c9da8bd9d871681965808e20d7239d588 matches
Binary file .git/objects/05/6a8112b46a990440ae37165283926f68f58fc2 matches
Binary file .git/objects/39/1e5fcbf15e62ab7480311875b66e5560fc01b5 matches
Binary file .git/objects/39/3fce2c598885ebbbb0ff3dfbb15214265776c7 matches
Binary file .git/objects/39/97a257156cea3fea816513e360cdd22213f9d6 matches
Binary file .git/objects/39/09e40760741d2607adbd5a277aa3a7eb460163 matches
Binary file .git/objects/39/324883f30e24e45ecc0dc5f234b10b51002799 matches
Binary file .git/objects/23/59628ac8b297075b94789991be8583cfbb6197 matches
Binary file .git/objects/23/34bad6a72fd57dc860cf86ded7a3a10b72e985 matches
Binary file .git/objects/23/afba167161d6c9462779345b12547122ee5e11 matches
Binary file .git/objects/23/04c5114b72645c353b2d4ae7925829b70306c2 matches
Binary file .git/objects/7c/c74f0fc3f0caa361786757e8603db24d102e49 matches
Binary file .git/objects/7c/e5bce241d471501f9c9fd15045fd43d08585d4 matches
Binary file .git/objects/7c/3ee7350513d82c56c2aa9d0e21ed157e539f52 matches
Binary file .git/objects/7c/12807f96fcbecf813046f15d8610ae8c758b88 matches
Binary file .git/objects/a7/a032fc669c23363f854b7664959f5431d354d2 matches
Binary file .git/objects/a7/d19fbb7ce98ff0330f0c432b34ed27164d670f matches
Binary file .git/objects/8b/a53656d40c1848d4c698e51d82aac5e1d7d60a matches
Binary file .git/objects/8b/a8495d899a92b67e06def1b08c992b18c0b829 matches
Binary file .git/objects/8b/9e228af1aef24c8710909185bdc9cf38cccc08 matches
Binary file .git/objects/8b/17ff563a97b04370377aaa7403d1295cfb7e56 matches
Binary file .git/objects/07/998a2f24ca601ced4e0622809cee37c58f77e4 matches
Binary file .git/objects/07/7c6314ded20cd355140f4dd64c304cfe396eed matches
Binary file .git/objects/07/393fa34e6e596b1cb6a4c1636ddb0ad5ff62da matches
Binary file .git/objects/07/842d429991d519843d74b185c20af48b991756 matches
Binary file .git/objects/07/fd5a6e8dcd09b66d459aaa96c2003f26f85ecc matches
Binary file .git/objects/07/e06455bd2d0d693c77451c07e4b31baac2fc0a matches
Binary file .git/objects/81/f57a8b89442700b9da9aa826363355118f9372 matches
Binary file .git/objects/81/98c79a9b71b873d8afe931da25baf768405ee5 matches
Binary file .git/objects/81/2f51203af397e7b5b00b82dfc0db7488fefd2f matches
Binary file .git/objects/81/8f49f33268306f243e2cbc9d941981dac0f67c matches
Binary file .git/objects/aa/8607ffa610f62c93df1f6a387600edecd465c7 matches
Binary file .git/objects/aa/7c8da8bcc0b8a5b6ea0e6f4e2a06d34960abbd matches
Binary file .git/objects/aa/49f295d9603c94b762a702df89ba110a99cf75 matches
Binary file .git/objects/aa/13eddd1855a0eed41fb7bca99940860cdce90a matches
Binary file .git/objects/b4/ec847190f69f64a763f54b59731237e19edb2b matches
Binary file .git/objects/b4/8ef54d54ccf63c76da27a232e6830bf67c3a22 matches
Binary file .git/objects/b4/46e5e7cb7482765dba0b131ea126c38cc9b5ac matches
Binary file .git/objects/b4/dcdb0d11d98f1d89c7cce9c5d74e5ad3fd2923 matches
Binary file .git/objects/b4/159d8c6e5e5616436cacb2df522dce199f410a matches
Binary file .git/objects/b4/b52daa51de5abf79c42c021cf641f4b88d31e3 matches
Binary file .git/objects/4c/46259cb35716434e70ecf8f91ae0eae9a4f04a matches
Binary file .git/objects/4c/a48f004849d881573ec4057be9414a3a314607 matches
Binary file .git/objects/4c/2801bdf9c35a56f42d2f8df466a013d031114c matches
Binary file .git/objects/4c/b8f0d95aaa179da754e7a2656c38a7aaa18f35 matches
Binary file .git/objects/13/a1cf0ec055ef2ae0c70d4e51765f74e099afd7 matches
Binary file .git/objects/13/77a448b0ab8f8ccc58560c140813433e08eb73 matches
Binary file .git/objects/13/a7b73479a8bb020b8edaebc976af4f99332f41 matches
Binary file .git/objects/13/d6f36b7345e4196ab08a6daab56e2a3efb07e4 matches
Binary file .git/objects/13/e6f1af70993af3de66e7dc8c388736cf92480d matches
Binary file .git/objects/13/447e68c78cf0e54793966ecb4226c9650306b5 matches
Binary file .git/objects/13/88ba07ab1081b0c35e0cc3f0262ad04b6bb832 matches
Binary file .git/objects/13/8935edf1905657d065250cd21be4a17130f6e5 matches
Binary file .git/objects/d6/6ce2df6d5c7b434dee65342dcc0b230932a1b3 matches
Binary file .git/objects/d6/82a79d5347331439c74b042e8aa81eae8ade1d matches
Binary file .git/objects/d6/26db2002c5daf7e19264fb03f96ce960e985ed matches
Binary file .git/objects/d6/9cf17a018c69ab11eb611c62f5abecef353f0d matches
Binary file .git/objects/d6/e9d157dcd0ebccd848b174b071c0b351323543 matches
Binary file .git/objects/7a/eca25d5d4a6167eb865d95e719a3a066b95c07 matches
Binary file .git/objects/7a/f46c418665b6c66488d12211daa6bb7a69ff4a matches
Binary file .git/objects/7a/cfeb99d6c12b50b442c3f85985ef37eddc8bfe matches
Binary file .git/objects/79/f7b897f4981e109d71d1393aa9c1ad134b8bf8 matches
Binary file .git/objects/79/251dec87ed21a2bae14a905ea5f51c8a096597 matches
Binary file .git/objects/79/da955f1b1a970d90b689dd699065cb2f46e7b7 matches
Binary file .git/objects/79/1bc0da281e08d5eb573798e4adf8f5eae06ff8 matches
Binary file .git/objects/79/66f34b4efb4c17ebb405d2bcbeb3a665be13a0 matches
Binary file .git/objects/79/c0793ab1823ede360971452d3aa4074cfe6767 matches
Binary file .git/objects/79/181ad972f3c510a01c48aa7bef6c25f749bfc4 matches
Binary file .git/objects/0a/778bbbc8aed691456c79c3857d4eb986732945 matches
Binary file .git/objects/0a/85a7260c38f1e2feddfa81628b4d667186e041 matches
Binary file .git/objects/0a/b1658f0330c4a44931e9e829b3c60814a1c67e matches
Binary file .git/objects/0a/898c573e5c4fff8f463874762380d18eeabc26 matches
Binary file .git/objects/0a/58b981ff67af7878a7b809e8fc08409cecb028 matches
Binary file .git/objects/0a/2874e822960c048c08daee0344d173a16bd5fc matches
Binary file .git/objects/d7/0a2765777fe16cc53bc5d72c39a28948b3ebb7 matches
Binary file .git/objects/d7/dfead7b8f7a003b7146b89b5cebc09d3aafd14 matches
Binary file .git/objects/d7/e24fce5aefa4cba7a8fbc1a5edbda2748d755e matches
Binary file .git/objects/d7/4746457b4f783ba15573d44e45e596187b4f97 matches
Binary file .git/objects/d7/24b1302462a11d511bfcba8e53322383fda6d3 matches
Binary file .git/objects/18/d83e5f082e7d5a15c31fa625e7d3fb4f54118e matches
Binary file .git/objects/18/6d00843640c5d3933e196424cbc62bf1949c5e matches
Binary file .git/objects/18/b080e9ac1932bfbd16eeb984e819769ab9cb69 matches
Binary file .git/objects/9f/b3c0a62e5d6091538cab131e530f983e4156a8 matches
Binary file .git/objects/9f/e6f1c89faafb023869e9c2d504bfbcbbf7d6ac matches
Binary file .git/objects/9f/6f1ae9445dc1f7b09e0e2b04e0b9b8abbc35b0 matches
Binary file .git/objects/61/c566d08c0efd297b7b2ffbb27e5ee7d7d52f13 matches
Binary file .git/objects/61/24c86f1a8c512c8283636c1c2d79daaf926ad9 matches
Binary file .git/objects/61/39f2ea9ba1d80f43fa0d304325bbd4c5a2b7e4 matches
Binary file .git/objects/61/a0e971d8a1a181ccd5a57412436f2b83a95771 matches
Binary file .git/objects/10/7731c7dc2a342460a08729f78c1473caca084e matches
Binary file .git/objects/10/55422c9e2ceacb89ea179903f585473fbd564b matches
Binary file .git/objects/10/0714c4f09ac911ce034fd0fe7814e0ec349c4c matches
Binary file .git/objects/10/312f3b9fc486d028db6d2d42b5d5acb85cd044 matches
Binary file .git/objects/10/8bf7347d875c39e035b0122d7624fa084963ac matches
Binary file .git/objects/69/2931fe7e21ade905bf15bd19981610a8a6d761 matches
Binary file .git/objects/69/0f61ea8c595327ff432d81e45148ef670123b0 matches
Binary file .git/objects/a5/0af5edd36aa9741d3413469f4dc602db865554 matches
Binary file .git/objects/a5/08e2125d72210ac6e6d516e00f2f90029c10e1 matches
Binary file .git/objects/a5/fd7eb4aedeb227d8c2afc1655164018b8db865 matches
Binary file .git/objects/a5/a4f30087287dea450ca230d2a497ca37496ece matches
Binary file .git/objects/a5/932847cab9d27e022021d7d922a4a84685469b matches
Binary file .git/objects/16/3c28522f7a216c28ed687784dd9dabdab2bf89 matches
Binary file .git/objects/16/3ebe8e3d8b58ac9bde68e0b04bc201904e6465 matches
Binary file .git/objects/16/c89b546ee989b3811b64b1da701d6745f74566 matches
Binary file .git/objects/16/13d0170129e3be489a8aface7cd29b4cd2922b matches
Binary file .git/objects/16/7ad863cce53d6c547b250fd6c8f348dbc29708 matches
Binary file .git/objects/98/6c204fd2318872c66601abb64a84cb94798d46 matches
Binary file .git/objects/98/1eebc49d4797923684c043f780834386d8c973 matches
Binary file .git/objects/98/67acb24eb7a5dfb2df728f331433fc24d9f73f matches
Binary file .git/objects/98/d7cd4cce2dc6c7f1c82a67339bb3b8ca926a93 matches
Binary file .git/objects/44/91959c6dd690a2f661cee8f27cc82723ae90a5 matches
Binary file .git/objects/44/2492237e032cf67cc020807ba8f896ecef50ab matches
Binary file .git/objects/44/7089c5df376d6b2415732ebb1241e2aa4a7d63 matches
Binary file .git/objects/44/bc2f5af65a502677a978385d1c45f692f9713f matches
Binary file .git/objects/72/dc32ae8614fa08adc16948bf0b566092c3b64f matches
Binary file .git/objects/72/1c936deffc1faac25c7c8102a5d8d39e430048 matches
Binary file .git/objects/72/cb0b9001520100dab28a295fbd060566d65475 matches
Binary file .git/objects/72/6590e721051d0e531e687cd479ba42fa13782d matches
Binary file .git/objects/72/d7501bbc44362142418152d0eee3769e67519f matches
Binary file .git/objects/72/0c433c11359bc930c55cbd43b0738d3eea34de matches
Binary file .git/objects/41/1fbe2ddf33829758f22199d02a1145daae6468 matches
Binary file .git/objects/41/fd1ab0a039f4b4ff5969866487d59779d083ab matches
Binary file .git/objects/41/530bc867aded336ddbef321905cd3606092579 matches
Binary file .git/objects/41/10ce05fd6920614e3592a1097b322a1059367f matches
Binary file .git/objects/41/d65bb81c83531ca68e4c25a1a0552041104fe4 matches
Binary file .git/objects/41/cf06ec845f6b210b33aaad666b58df71fced2b matches
Binary file .git/objects/41/d18671f059335ead01c0ad46ddc25efdda3b54 matches
Binary file .git/objects/ec/12b945c729ce3483850aa59e6105eef26de7f8 matches
Binary file .git/objects/ec/479866e0249b25d96341972e37e1ee3da747e1 matches
Binary file .git/objects/ec/90d96f729048ecaacb4d95cbed85550454bd14 matches
Binary file .git/objects/90/4e1f5e25f942d63745cf0eede2b2266c875a7b matches
Binary file .git/objects/90/afe5834b53919bb86bb17dae25eb2c863f048c matches
Binary file .git/objects/90/667a684d2c9b83e71def599f9107eb2c239d5c matches
Binary file .git/objects/90/acfabdff45f370c078a500c9f2f5f01538ece1 matches
Binary file .git/objects/90/53f8ae1b62f4032da980c77486fd46701385a2 matches
Binary file .git/objects/38/f9d77eacb1fdc21b9e9d7c7448a5dc526e538b matches
Binary file .git/objects/38/40d51d5cc2a882c0cffbeeed26118a3a671f85 matches
Binary file .git/objects/38/45ab07af1d8e74882c25e73ce80e05963ac1bd matches
Binary file .git/objects/6e/bcffa01f2e1e8c7836c0674e8ca22d72d32906 matches
Binary file .git/objects/6e/bd14e27f397be14652cebfbe401e8c1c056e34 matches
Binary file .git/objects/6e/0b60e590447fd98e21cc758b7babd3c8a93cd1 matches
Binary file .git/objects/1f/d62d9baa63a9ed053aedb7e1ff97d8738c5489 matches
Binary file .git/objects/1f/0cbb530cb88480c637413971b5a115880978a2 matches
Binary file .git/objects/53/63c3cc929cfdd799c97098cd481c0d1039c122 matches
Binary file .git/objects/53/63b2734258fa1370e87c0126b704ea6bdf9cba matches
Binary file .git/objects/53/f783556c189d441d816ff8f3efbc22b2b28e76 matches
Binary file .git/objects/40/a9ae303d0af9ea78330f1aca23a4e75c3f21fd matches
Binary file .git/objects/40/b88a60e9e683d32725d0b2b563fe1d1970937e matches
Binary file .git/objects/40/a33f21f6a6e6dbcfab9a867410ec1c49e64e8d matches
Binary file .git/objects/40/ca3f9c640c8825a54412ad1a79e3b37b3bb98a matches
Binary file .git/objects/40/5f42ae85a900beea19eb4a96010efab4f14016 matches
Binary file .git/objects/40/68475fd72a3501ae6600653bb3d56f01520b3d matches
Binary file .git/objects/cd/2758002fcdaca80fb6707a5ec1ae18e13f7456 matches
Binary file .git/objects/cd/e68209e59d9dd86f958c0cd2d071648afd924b matches
Binary file .git/objects/cd/e9532b3407fbae6c687201d937d6063b6c676e matches
Binary file .git/objects/ed/4dac557befd7e253a7520426a5c34bca1177f7 matches
Binary file .git/objects/ed/8b11be6f576a8bf3ac8cc4727b155435857aed matches
Binary file .git/objects/ed/e629b6b154c6fdd25ef98e7b7dbf6e66a4dd0c matches
Binary file .git/objects/ed/39885db522edca869be97d3101e6b4f96260f8 matches
Binary file .git/objects/fe/b35521964da3159a7f3c54d00271345a99f96a matches
Binary file .git/objects/fe/259b412f6201c850b7344a1ece2146b8d2c231 matches
Binary file .git/objects/fe/d87abdbc380e3105491cf4abf6934734cae042 matches
Binary file .git/objects/fe/6c88018475647afcd3815e69c04c11b65e6405 matches
Binary file .git/objects/4f/7adb3301ad58bf416502b0f11fc6d7bb9040e1 matches
Binary file .git/objects/4f/aa225c11d76ee339d84cf4ddfe4aa084c8eed5 matches
Binary file .git/objects/4f/1688bd8b23c97af0e1ef01c01614b9301dd336 matches
Binary file .git/objects/4f/9057d1ff73e99d27823b20a1087fb9294c0455 matches
Binary file .git/objects/4f/b898eb58c12eca016337d397b5a51ef9c0bb57 matches
Binary file .git/objects/9b/ef629f8b967e2b2ae3d44a7fa5439bf6681478 matches
Binary file .git/objects/9b/048ec587982fd1b0b3cf758bc451cc71f4d4dd matches
Binary file .git/objects/9b/dcbdc0e264fbab1dd5782c4c38c43a4a211ac1 matches
Binary file .git/objects/9b/b8fd95d52e41634289fc9dea6d86ce081b7ef8 matches
Binary file .git/objects/9b/8265484924ea74b3492ff7d5c340675477a998 matches
Binary file .git/objects/32/b81a40e1e3ffe6818d4d6f81852b735c8252fd matches
Binary file .git/objects/32/e0d04a2e20745ee7ea457589f8677816ecc7ef matches
Binary file .git/objects/32/ccc0b22b70f0970327a379b17994361e56284d matches
Binary file .git/objects/b6/8d1a6effbb33ec20422bde77336be5e155c8f0 matches
Binary file .git/objects/65/794c6736e3cf91326fc2aa52f4df88a2c59859 matches
Binary file .git/objects/65/584bb5dd47cec1c7d186f1f82d54a4c002c5cd matches
Binary file .git/objects/88/6901f266dec2d24e903dc64a11277ac857735f matches
Binary file .git/objects/88/b1f98e6624800d0352369d6d0bca2be7cd6c11 matches
Binary file .git/objects/88/1e65b9efc84b5957423fa7fb324e5fcbcedbdd matches
Binary file .git/objects/88/10e9cc6cbfb875c80d7262bb95346229173c31 matches
Binary file .git/objects/88/ec596b1040fe53682cab14fadb0d576c72d330 matches
Binary file .git/objects/88/abe1195a6efcf0bf205ae1e3b26b71baa8f6d1 matches
Binary file .git/objects/88/fadc2b04ba8098e5ec8ae626f4541a74567c1b matches
Binary file .git/objects/35/3afb505291bd7763698d05f679920d862aa9b4 matches
Binary file .git/objects/35/7dfce4653ddcbaa907bad76abf0988d5429e16 matches
Binary file .git/objects/35/9651f16f704e399991e054c4a2e1b62fe1018e matches
Binary file .git/objects/35/385317ad098e0b6379cb38fd0b01c84d0c4d37 matches
Binary file .git/objects/35/0f010eac02b0f18028402028324486773c8caa matches
Binary file .git/objects/35/ae7c33827e6a527e093fa5df711b77b0a1f210 matches
Binary file .git/objects/75/83c547cc1e010c6dccc31f7d8d392fee784fa1 matches
Binary file .git/objects/75/ba8154ca372841cdbebfe119db3ff8201140df matches
Binary file .git/objects/75/1e6c4e082c95aaa71f2e2052604a801ade1946 matches
Binary file .git/objects/02/23dc9b76d426f13ef44e34cad434b04ff8fa41 matches
Binary file .git/objects/02/83f6527c40da343d54b9b50789bba7b3c09b94 matches
Binary file .git/objects/02/ca2fc758e38853a96bbde72d2345fb6a9cea73 matches
Binary file .git/objects/02/38127fe990e6083e3474ba176bcb29a77ee9bf matches
Binary file .git/objects/02/380a5bbf96cef233959de001dd39842c56de84 matches
Binary file .git/objects/19/d4b3e521d52c05df7bce35beb68f8e82acbd74 matches
Binary file .git/objects/19/120ac62f50e54db45c14b90250f008fbf7a0da matches
Binary file .git/objects/19/b1f1c00191cf53ba393c2b7e5b08c45a5515b1 matches
Binary file .git/objects/19/f6c3d5c768ed43c6d7289035c292afcc54598d matches
Binary file .git/objects/c7/7959ee00c5ef5263e83968044b40f9ff109c43 matches
Binary file .git/objects/c7/5636f1986c42d17c417cbd6520fe3af3d63303 matches
Binary file .git/objects/c2/45461fb19011f541886076fd9f3435b95359d9 matches
Binary file .git/objects/c2/5466b8d2fbebc6997e5888b9e063d9329b2efc matches
Binary file .git/objects/c2/66d56a794594f986505f5145922720a6679ff7 matches
Binary file .git/objects/c2/922a6d14b7464dabdc4757d2f43e431fd81ad3 matches
Binary file .git/objects/c2/9f015bccbf8bec1a2d0065a4c6789581a77cd8 matches
Binary file .git/objects/09/40947826b0db60aa5664512820bcd7d88f074d matches
Binary file .git/objects/09/58810fc563564fc24c4fd16dbf3b627eb1e4cc matches
Binary file .git/objects/09/4374681583e5cac3bc6456a7b0ba1fe510a64b matches
Binary file .git/objects/09/1baa5f04e9d8c1cca1e7432f245d1f6aed3fd9 matches
Binary file .git/objects/67/ba259b19e65af7de6a83fd20714bfccb2b96d2 matches
Binary file .git/objects/67/d997d1f737b8cd1d37ce79af070e93407f11cd matches
Binary file .git/objects/67/40d8c0e0fbb1ecd814fdb18191312eb456cb81 matches
Binary file .git/objects/b7/1f794d599931a0754fb6c89522d274dd5591df matches
Binary file .git/objects/b7/b0a3d45e0fed0b1fee9201ad00d24cb15140a4 matches
Binary file .git/objects/b7/47fadd2e39466cc1041a1fb3aa8135898424c3 matches
Binary file .git/objects/b7/c25fc1336d1091e9dbc31a3bd4f07b8175d140 matches
Binary file .git/objects/46/7be7cbbe4fe04c6d59c1f44e0417f0d64b64c4 matches
Binary file .git/objects/46/407198dca237f034ffda8bc0b784ae8b7ff874 matches
Binary file .git/objects/46/a212adbf49a3e2052e998627010385e836a396 matches
Binary file .git/objects/46/e282418baed230df8d0a73555cec7db9a8dfd0 matches
Binary file .git/objects/f7/900ce38efe43c8195ff1838d10948762cfb79c matches
Binary file .git/objects/f7/28f88414eaca7b45b0c12961e35f90e05e78f8 matches
Binary file .git/objects/f7/31ad87af2d9479152bbd84f2d98a245ceb4600 matches
Binary file .git/objects/95/84f71c21a63f641bcdf551389834dd63b40701 matches
Binary file .git/objects/95/22a34c56f1a78a3c27aa8dcb007cea1638b968 matches
Binary file .git/objects/95/802051648f5ab63a963852f5a39ce5f054fbd3 matches
Binary file .git/objects/95/cbbcc277fbc685a3d9f4e1a3b86d81ed061a41 matches
Binary file .git/objects/74/e964d723fa46cafd60700b743222063a1486bf matches
Binary file .git/objects/74/2e0a78a3eb16c483bff89863ed1a8031d10984 matches
Binary file .git/objects/74/340fe47a92c466426d9151d2301881ea9355c9 matches
Binary file .git/objects/28/37ac52126c9e385237da536a99e7e3aaad0905 matches
Binary file .git/objects/28/8166701156679802c6e438eb428516472c1b8b matches
Binary file .git/objects/97/8a1dcc6aaaa59e9a21cf7fd00fcd42a9f1caf3 matches
Binary file .git/objects/97/2b9f0f8a9bad6e4abcd17e21b35e4eda8fb4fb matches
Binary file .git/objects/97/a6d07be8043ee14364260b2ecd939bf7d54eeb matches
Binary file .git/objects/ab/8c077d7b4be86d68602d64c0fabfbd246939ad matches
Binary file .git/objects/ab/358505cfafab006fc8f15563f9177315e0ade0 matches
Binary file .git/objects/a1/96ccd8ce80c2dbe588cc9f973d1bea9674015b matches
Binary file .git/objects/a1/1c7d2d6d23caa117b0d798050518c9a16b32f5 matches
Binary file .git/objects/a1/dc7cc4209422a035d5296b2aa39bb3f554381a matches
Binary file .git/objects/a1/0ad48847adb67a73a9a1ea59086aea4b5a541a matches
Binary file .git/objects/a1/c728a91b1fd66e826662bd3d0678b11034d50e matches
Binary file .git/objects/d8/06e2b70e6c46fd1b17002834053860c1ebebd1 matches
Binary file .git/objects/d8/38e611960cb84f230c17940b41df6f501e3fb7 matches
Binary file .git/objects/d8/b07d9e2d00cee6eb8084d9846d64092575682d matches
Binary file .git/objects/d8/946c71403c9c8a0c523f536edc23ae748a487b matches
Binary file .git/objects/d8/f9f20d2098253a6f07e44d62cce88321f15c7b matches
Binary file .git/objects/d8/94f7651aa4c89f8f95516467d1c0d0ae4b09bb matches
Binary file .git/objects/fc/a208fa126851c4115ffcea65201acab6a3d332 matches
Binary file .git/objects/fc/8bec15fe4c1705ab2dda2d3f8cb0c90e79887f matches
Binary file .git/objects/fc/b4f5501914f899ddac170e0a99581449ba509d matches
Binary file .git/objects/fc/3f9501ff191cc6a9f01ba2cd33eb00134f30a1 matches
Binary file .git/objects/fc/36371236cb311054f4aebd721b51fcfa897dbe matches
Binary file .git/objects/ce/c0e7e3d707d5faa014089d74e01a1653cc3c56 matches
Binary file .git/objects/ce/16b8a2b0fb6092720bde6a698a5ea154d2d26c matches
Binary file .git/objects/e9/d3cfa69f0fc34a97be8b5cac821c4cc3f7e9cb matches
Binary file .git/objects/e9/f463ccb56a6ea6485b86c8f3a69e86cd227b50 matches
Binary file .git/objects/e9/b82d755a69c1d4e7eedf07027f2a48176f3f58 matches
Binary file .git/objects/8d/dfcc6e6619e7aa3661fe2328086f221deea58c matches
Binary file .git/objects/8d/621ebc90c2ca4c5b5848009f33f83913561330 matches
Binary file .git/objects/8d/b6f30be1cfef55f3989bcdc3d19278291fb234 matches
Binary file .git/objects/8d/ac71072d1f697d98e20ddcc4afb841bec8c2bc matches
Binary file .git/objects/8c/cd98f261e5c606620f255fd86efc8792bc17da matches
Binary file .git/objects/8c/4e0a937099892d42fade04a9417f8d6c7dfbb6 matches
Binary file .git/objects/8c/19fdefb13507398b60c5d21607a49b53a317ec matches
Binary file .git/objects/e5/682896bee5d50b750303d1ff3da4d7ccdef8b7 matches
Binary file .git/objects/e5/eeb6f46970a0ef12087638026eb25cb227e552 matches
Binary file .git/objects/e5/497e005af0cbf42cf5494e856ea9fceab0f645 matches
Binary file .git/objects/e5/900c7c89bf44e1036c50f590ed25a1852ffb4f matches
Binary file .git/objects/5c/25e2ab34ca268df14e3009fd9029a6ee85cd2d matches
Binary file .git/objects/5c/a5b3c5f7428910c4efe5ce3ba6f415ba2a8aac matches
Binary file .git/objects/14/2266d5a93bc9d94e9964d817bf3ac3376edbc8 matches
Binary file .git/objects/14/37718871be189dd33d514545ccd3139be30a21 matches
Binary file .git/objects/14/fac332c215e8150d2f1114df6b61685c455922 matches
Binary file .git/objects/17/694b5a1248778ce168a5d8a1598fd82b3a38ea matches
Binary file .git/objects/17/40f90c67732de6767ee0d7a636cc627c90fc43 matches
Binary file .git/objects/17/77b84ccc1f78706203f5381bd40c21f7aab1b4 matches
Binary file .git/objects/17/0f2aca9f09047b491a3b1d60a6aea60851e2f1 matches
Binary file .git/objects/bf/ec81d9ce9741a799950c7b1c3c6da3c94e7b91 matches
Binary file .git/objects/bf/b616f26785f21cc93560bb710eeed2df50513c matches
Binary file .git/objects/bf/06f9d98753cb9cc1b6ce0c2c6a46f1e2ca44f5 matches
Binary file .git/objects/37/4570c9e044a55bd43778ab2f9dd2fa40c3ad05 matches
Binary file .git/objects/c8/52e19bb9d492f852f5f822657408cb3634412f matches
Binary file .git/objects/c8/ecdd4f9de1fb5985eae0bc23c418fcb7663293 matches
Binary file .git/objects/c8/219c333645b733e4ba273d79ab76fb9bacdf68 matches
Binary file .git/objects/c8/cb4324c614725341ba9b3f19f97f5415bcc0bf matches
Binary file .git/objects/c8/48cc425fdfc8d33f8cc62ab63c45ad2743b5b6 matches
Binary file .git/objects/c8/20bb666c713e5b360aa60a7f0ef26ef64b4242 matches
Binary file .git/objects/ba/ca2d4ebc880a884ab5dfcab051bc0bb3d68cd6 matches
Binary file .git/objects/ba/45e51bbee4c548b47521b296b15bead06baf14 matches
Binary file .git/objects/ba/cdb458dc077f9afab185bb46d864f71711e51d matches
Binary file .git/objects/dc/8c3b4dce55f4d4b83ecd2f67a6784b238d981a matches
Binary file .git/objects/dc/a8e8e046de73d689268e29af8dfc6ac5170a2e matches
Binary file .git/objects/dc/b9305d9f849a764d506390b86f9a9f23f9a01c matches
Binary file .git/objects/dc/f92ac925864dd1a6e8fbe350bee74eb522367e matches
Binary file .git/objects/dc/c8e4dcdf0300034d3af7f39e3509071bec0ab1 matches
Binary file .git/objects/dc/cb6f012ffaf1cae45a7408d5a45f40b7b0105e matches
Binary file .git/objects/59/11cc7ac07b575f5f9e09349fc466ba794b8e33 matches
Binary file .git/objects/2e/b5667bc8058f5444f219ecd6a0a767574222c6 matches
Binary file .git/objects/2e/c2358e0e977fb74154e98601988329af877027 matches
Binary file .git/objects/2e/2b72a7541e36d1f7e6b7d3957b8b0d4b954561 matches
Binary file .git/objects/2e/34193beeb8fe2860acb9b3410827d211574712 matches
Binary file .git/objects/2e/67e5101094c752558388cf00ae8fd0952c99b4 matches
Binary file .git/objects/2e/1004ce32788f604a8a9193903256935fdfe6f6 matches
Binary file .git/objects/2e/426a1899105575219a044f6d73c62cd95be651 matches
Binary file .git/objects/66/322fbf7238638abddf0099101e08386e297bd8 matches
Binary file .git/objects/ee/7fa9197678317ec7dbcae614742654d6dab24e matches
Binary file .git/objects/ee/be1ae4f9d65afe762f798628ed12bae484f10d matches
Binary file .git/objects/ee/84191f1c0060d3cde0b45abb113fc2a9974b85 matches
Binary file .git/objects/ee/a46abc93b0423e2a0d122f2ec0ecffd373d6a8 matches
Binary file .git/objects/ee/fe16e2d8939da79f5cdf9e2a04e08ea2f11dbd matches
Binary file .git/objects/ee/3cdd058bbb18398fc8f11f2f1cc4b409c21446 matches
Binary file .git/objects/ee/50252a6ad669fe42502fde6a9aadf37a42f725 matches
Binary file .git/objects/ee/26587d0ebe08cd544b7243510a5c7edcd25837 matches
Binary file .git/objects/93/90e110ae30f8a61f1784492532c699c0c934d5 matches
Binary file .git/objects/93/8eff74f508d5bfed5c2ee3a5d6f9440cce20cd matches
Binary file .git/objects/6a/c5fa492d8229dc0646ef0d48bc0f8b6f5c866f matches
Binary file .git/objects/6a/3e16d68bdb5df9d9d2e6ffc09603f7452630bb matches
Binary file .git/objects/7e/e8ed71240e4b4eb729e7bea965e371ac5d299d matches
Binary file .git/objects/7e/c144c35969d33033d29552ebe297ea0fce3c34 matches
Binary file .git/objects/7e/28e3668b8c5dd25447a3357b82ec761f1cdb92 matches
Binary file .git/objects/7e/cbfff3a5971e5da8289270dd30e3a95cea831f matches
Binary file .git/objects/9e/a3474a2d17459193317bd918c1d19c4340ccb9 matches
Binary file .git/objects/9e/1a664ab27f9a552bcb55deec156f7ce00576ce matches
Binary file .git/objects/9e/7b2fc58170fc0b500bcd02a38cbb2a9d246535 matches
Binary file .git/objects/9e/55d7b7cf848f6e308a0e69ce8383f8a615ba95 matches
.git/info/exclude:1:# git ls-files --others --exclude-from=.git/info/exclude
.git/hooks/pre-applypatch.sample:4:# by applypatch from an e-mail message.
.git/hooks/pre-applypatch.sample:6:# The hook should exit with non-zero status after issuing an
.git/hooks/pre-applypatch.sample:9:# To enable this hook, rename this file to "pre-applypatch".
.git/hooks/pre-applypatch.sample:11:. git-sh-setup
.git/hooks/pre-applypatch.sample:12:precommit="$(git rev-parse --git-path hooks/pre-commit)"
.git/hooks/pre-applypatch.sample:13:test -x "$precommit" && exec "$precommit" ${1+"$@"}
.git/hooks/prepare-commit-msg.sample:7:# message file.  If the hook fails with a non-zero status,
.git/hooks/prepare-commit-msg.sample:10:# To enable this hook, rename this file to "prepare-commit-msg".
.git/hooks/prepare-commit-msg.sample:15:# The second includes the output of "git diff --name-status -r"
.git/hooks/prepare-commit-msg.sample:17:# commented because it doesn't cope with --amend or with squashed
.git/hooks/prepare-commit-msg.sample:20:# The third example adds a Signed-off-by line to the message, that can
.git/hooks/prepare-commit-msg.sample:25:    /usr/bin/perl -i.bak -ne 's/^/# /, s/^# #/#/ if /^Conflicts/ .. /#/; print' "$1" ;;
.git/hooks/prepare-commit-msg.sample:28:#   /usr/bin/perl -i.bak -pe '
.git/hooks/prepare-commit-msg.sample:29:#      print "\n" . `git diff --cached --name-status -r`
.git/hooks/prepare-commit-msg.sample:35:# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
.git/hooks/prepare-commit-msg.sample:36:# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
.git/hooks/update.sample:4:# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
.git/hooks/update.sample:9:# ------
.git/hooks/update.sample:27:# --- Command line
.git/hooks/update.sample:32:# --- Safety check
.git/hooks/update.sample:33:if [ -z "$GIT_DIR" ]; then
.git/hooks/update.sample:40:if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
.git/hooks/update.sample:45:# --- Config
.git/hooks/update.sample:46:allowunannotated=$(git config --bool hooks.allowunannotated)
.git/hooks/update.sample:47:allowdeletebranch=$(git config --bool hooks.allowdeletebranch)
.git/hooks/update.sample:48:denycreatebranch=$(git config --bool hooks.denycreatebranch)
.git/hooks/update.sample:49:allowdeletetag=$(git config --bool hooks.allowdeletetag)
.git/hooks/update.sample:50:allowmodifytag=$(git config --bool hooks.allowmodifytag)
.git/hooks/update.sample:53:projectdesc=$(sed -e '1q' "$GIT_DIR/description")
.git/hooks/update.sample:61:# --- Check types
.git/hooks/update.sample:67:	newrev_type=$(git cat-file -t $newrev)
.git/hooks/update.sample:72:		# un-annotated tag
.git/hooks/update.sample:75:			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
.git/hooks/update.sample:76:			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
.git/hooks/update.sample:89:		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
.git/hooks/update.sample:98:		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
.git/hooks/update.sample:127:# --- Finished
.git/hooks/pre-commit.sample:5:# exit with non-zero status after issuing an appropriate message if
.git/hooks/pre-commit.sample:8:# To enable this hook, rename this file to "pre-commit".
.git/hooks/pre-commit.sample:10:if git rev-parse --verify HEAD >/dev/null 2>&1
.git/hooks/pre-commit.sample:18:# If you want to allow non-ASCII filenames set this variable to true.
.git/hooks/pre-commit.sample:19:allownonascii=$(git config --bool hooks.allownonascii)
.git/hooks/pre-commit.sample:24:# Cross platform projects tend to avoid non-ASCII filenames; prevent
.git/hooks/pre-commit.sample:31:	test $(git diff --cached --name-only --diff-filter=A -z $against |
.git/hooks/pre-commit.sample:32:	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
.git/hooks/pre-commit.sample:35:Error: Attempt to add a non-ASCII file name.
.git/hooks/pre-commit.sample:49:exec git diff-index --check --cached $against --
.git/hooks/applypatch-msg.sample:4:# applypatch from an e-mail message.
.git/hooks/applypatch-msg.sample:6:# The hook should exit with non-zero status after issuing an
.git/hooks/applypatch-msg.sample:10:# To enable this hook, rename this file to "applypatch-msg".
.git/hooks/applypatch-msg.sample:12:. git-sh-setup
.git/hooks/applypatch-msg.sample:13:commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
.git/hooks/applypatch-msg.sample:14:test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
.git/hooks/post-update.sample:6:# To enable this hook, rename this file to "post-update".
.git/hooks/post-update.sample:8:exec git update-server-info
.git/hooks/pre-receive.sample:7:# To enable this hook, rename this file to "pre-receive".
.git/hooks/pre-receive.sample:9:if test -n "$GIT_PUSH_OPTION_COUNT"
.git/hooks/pre-receive.sample:12:	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
.git/hooks/pre-receive.sample:17:			echo "echo from the pre-receive-hook: ${value#*=}" >&2
.git/hooks/pre-rebase.sample:5:# The "pre-rebase" hook is run just before "git rebase" starts doing
.git/hooks/pre-rebase.sample:7:# non-zero status.
.git/hooks/pre-rebase.sample:11:# $1 -- the upstream the series was forked from.
.git/hooks/pre-rebase.sample:12:# $2 -- the branch being rebased (or empty when rebasing the current branch).
.git/hooks/pre-rebase.sample:24:	topic=`git symbolic-ref HEAD` ||
.git/hooks/pre-rebase.sample:40:git show-ref -q "$topic" || {
.git/hooks/pre-rebase.sample:46:not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
.git/hooks/pre-rebase.sample:47:if test -z "$not_in_master"
.git/hooks/pre-rebase.sample:54:only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
.git/hooks/pre-rebase.sample:55:only_next_2=`git rev-list ^master           ${publish} | sort`
.git/hooks/pre-rebase.sample:58:	not_in_topic=`git rev-list "^$topic" master`
.git/hooks/pre-rebase.sample:59:	if test -z "$not_in_topic"
.git/hooks/pre-rebase.sample:61:		echo >&2 "$topic is already up-to-date with master"
.git/hooks/pre-rebase.sample:67:	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
.git/hooks/pre-rebase.sample:68:	/usr/bin/perl -e '
.git/hooks/pre-rebase.sample:72:			/^([0-9a-f]+) /;
.git/hooks/pre-rebase.sample:76:				/^([0-9a-f]+) (.*)$/;
.git/hooks/pre-rebase.sample:79:			if (!exists $not_in_next{$elem->[0]}) {
.git/hooks/pre-rebase.sample:84:				print STDERR " $elem->[1]\n";
.git/hooks/pre-rebase.sample:125:    build on top of it -- other people may already want to
.git/hooks/pre-rebase.sample:133:		   o---o---o---o---o---o---o---o---o---o "next"
.git/hooks/pre-rebase.sample:135:		 /   a---a---b A     /           /
.git/hooks/pre-rebase.sample:137:	       /   /   c---c---c---c B         /
.git/hooks/pre-rebase.sample:139:	     /   /   /   b---b C     \       /
.git/hooks/pre-rebase.sample:141:    ---o---o---o---o---o---o---o---o---o---o---o "master"
.git/hooks/pre-rebase.sample:158:	git rev-list ^master ^topic next
.git/hooks/pre-rebase.sample:159:	git rev-list ^master        next
.git/hooks/pre-rebase.sample:165:	git rev-list master..topic
.git/hooks/commit-msg.sample:5:# that has the commit message.  The hook should exit with non-zero
.git/hooks/commit-msg.sample:9:# To enable this hook, rename this file to "commit-msg".
.git/hooks/commit-msg.sample:11:# Uncomment the below to add a Signed-off-by line to the message.
.git/hooks/commit-msg.sample:12:# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
.git/hooks/commit-msg.sample:15:# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
.git/hooks/commit-msg.sample:16:# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
.git/hooks/commit-msg.sample:18:# This example catches duplicate Signed-off-by lines.
.git/hooks/commit-msg.sample:20:test "" = "$(grep '^Signed-off-by: ' "$1" |
.git/hooks/commit-msg.sample:21:	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
.git/hooks/commit-msg.sample:22:	echo >&2 Duplicate Signed-off-by lines.
.git/hooks/pre-push.sample:5:# pushed.  If this script exits with a non-zero status nothing will be pushed.
.git/hooks/pre-push.sample:9:# $1 -- Name of the remote to which the push is being done
.git/hooks/pre-push.sample:10:# $2 -- URL to which the push is being done
.git/hooks/pre-push.sample:44:		commit=`git rev-list -n 1 --grep '^WIP' "$range"`
.git/hooks/pre-push.sample:45:		if [ -n "$commit" ]
.git/config:7:	url = git@github.com:asimos-bot/CFG-watermark.git
tests/test/test.c:36:		for(unsigned int j=0; j < i/2 - 1; j++) received_data[ rand() % i ] = rand();
tests/test/test.c:40:		ctdd_assert(result > -1);
tests/test/test.c:52:		if( i[i_size - j - 1] != result[n - j - 1] ) return 0;
tests/test/test.c:80:		ctdd_assert( check((uint8_t*)&i, result, num_bytes - sizeof(par), sizeof(i)) );
tests/test/test.c:83:		ctdd_assert( !memcmp(par, result+num_bytes-sizeof(par), sizeof(par)) );
tests/test/test.c:236:            for(GRAPH* node = copy; !found_connection && node; node = node->next) {
tests/test/test.c:239:                for(CONNECTION* conn = node->connections ? node->connections->next : NULL; conn; conn = conn->next) {
tests/test/test.c:242:                        graph_oriented_disconnect(node, conn->node);
watermark.c:59:			((uint8_t*)(&tmp))[i] = ((uint8_t*)(&n))[sizeof(n) - i - 1];
